{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACuD;AACD;AACA;AACiB;AACI;AACH;AAC0B;AACzC;AACiB;AACX;AACA;;;AAE/D,MAAMW,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAIC,UAAU,EAAE,OAAO;EAAEC,SAAS,EAAE;AAAM,CAAE,EACtD;EAAEF,IAAI,EAAE,MAAM;EAAEG,SAAS,EAAEd,+DAAaA;AAAA,CAAC,EACzC;EAAEW,IAAI,EAAE,aAAa;EAAEG,SAAS,EAAEX,oFAAoBA;AAAA,CAAC,EACvD;EAAEQ,IAAI,EAAE,qBAAqB;EAAEG,SAAS,EAAEL,wEAAgBA;AAAA,CAAC,EAC3D;EACEE,IAAI,EAAE,oBAAoB;EAC1BG,SAAS,EAAEV,iFAAmB;EAC9BW,QAAQ,EAAE,CACR;IACEJ,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE,UAAU;IACtBC,SAAS,EAAE;GACZ,EACD;IACEF,IAAI,EAAE,UAAU;IAChBG,SAAS,EAAET,2GAA2BA;GACvC,EACD;IACEM,IAAI,EAAE,MAAM;IACZG,SAAS,EAAEb,+DAAaA;GACzB,EACD;IACEU,IAAI,EAAE,oBAAoB;IAC1BG,SAAS,EAAEZ,gFAAkBA;GAC9B,EACD;IACES,IAAI,EAAE,OAAO;IACbG,SAAS,EAAER,kEAAcA;GAC1B,EACD;IACEK,IAAI,EAAE,0BAA0B;IAChCG,SAAS,EAAEP,mFAAmBA;GAC/B;CAEJ,EACD;EAAEI,IAAI,EAAE,SAAS;EAAEG,SAAS,EAAEN,wEAAgBA;AAAA,CAAC,CAChD;AAGD,MAIaQ,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YAHjBjB,kEAAoB,CAACW,MAAM,CAAC,EAC5BX,0DAAY;AAAA;AAEK;;uHAAhBiB,gBAAgB;IAAAE,OAAA,GAAAC,0DAAA;IAAAC,OAAA,GAFjBrB,0DAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;IErCRsB,4DAAA,cAAsD;IACrBA,wDAAA,mBAAAG,oEAAA;MAAAH,2DAAA,CAAAK,GAAA;MAAA,MAAAC,MAAA,GAAAN,2DAAA;MAAA,OAASA,yDAAA,CAAAM,MAAA,CAAAG,OAAA,EAAS;IAAA,EAAC;IAACT,oDAAA,cAAO;IAAAA,0DAAA,EAAS;IACnEA,4DAAA,iBAAkD;IAAnBA,wDAAA,mBAAAY,oEAAA;MAAAZ,2DAAA,CAAAK,GAAA;MAAA,MAAAQ,MAAA,GAAAb,2DAAA;MAAA,OAASA,yDAAA,CAAAa,MAAA,CAAAC,MAAA,EAAQ;IAAA,EAAC;IAACd,oDAAA,aAAM;IAAAA,0DAAA,EAAS;;;;;;IANvEA,qEAAA,GAA+E;IAC7EA,4DAAA,cAAsB;IACpBA,oDAAA,GACA;IAAAA,4DAAA,cAA6L;IAA1FA,wDAAA,mBAAAgB,2DAAA;MAAAhB,2DAAA,CAAAiB,GAAA;MAAA,MAAAC,MAAA,GAAAlB,2DAAA;MAAA,OAASA,yDAAA,CAAAkB,MAAA,CAAAC,aAAA,EAAe;IAAA,EAAC,wBAAAC,gEAAA;MAAApB,2DAAA,CAAAiB,GAAA;MAAA,MAAAI,MAAA,GAAArB,2DAAA;MAAA,OAAeA,yDAAA,CAAAqB,MAAA,CAAAC,WAAA,EAAa;IAAA,EAA5B,wBAAAC,gEAAAC,MAAA;MAAAxB,2DAAA,CAAAiB,GAAA;MAAA,MAAAQ,OAAA,GAAAzB,2DAAA;MAAA,OAA4CA,yDAAA,CAAAyB,OAAA,CAAAC,WAAA,CAAAF,MAAA,CAAmB;IAAA,EAA/D;IAA5HxB,0DAAA,EAA6L;IAC7LA,wDAAA,IAAA4B,2CAAA,kBAGM;IACR5B,0DAAA,EAAM;IACRA,mEAAA,EAAe;;;;IAPXA,uDAAA,GACA;IADAA,gEAAA,eAAAgC,MAAA,CAAAC,qBAAA,CAAAC,QAAA,CAAAC,IAAA,MACA;IAAyBnC,uDAAA,GAAmD;IAAnDA,mEAAA,QAAAgC,MAAA,CAAAC,qBAAA,CAAAC,QAAA,CAAAG,UAAA,EAAArC,2DAAA,CAAmD;IAC7CA,uDAAA,GAAqB;IAArBA,wDAAA,SAAAgC,MAAA,CAAAQ,eAAA,CAAqB;;;;;;IAOtDxC,4DAAA,iBAAiD;IAAlBA,wDAAA,mBAAAyC,6DAAA;MAAAzC,2DAAA,CAAA0C,IAAA;MAAA,MAAAC,OAAA,GAAA3C,2DAAA;MAAA,OAASA,yDAAA,CAAA2C,OAAA,CAAAC,KAAA,EAAO;IAAA,EAAC;IAAC5C,oDAAA,YAAK;IAAAA,0DAAA,EAAS;;;ADlB7E,MAMa6C,YAAY;EAQvBC,YAAmBb,qBAA4C,EAAUc,MAAc;IAApE,KAAAd,qBAAqB,GAArBA,qBAAqB;IAAiC,KAAAc,MAAM,GAANA,MAAM;IAP/E,KAAAC,KAAK,GAAG,UAAU;IAClB,KAAAC,eAAe,GAAG,+BAA+B;IAEjD,KAAAC,eAAe,GAAG,KAAK;IAEvB,KAAAV,eAAe,GAAY,KAAK;EAGhC;EAEA;EACAlB,WAAWA,CAAA;IACT,IAAI,CAACkB,eAAe,GAAG,IAAI;EAC7B;EAEA;EACAd,WAAWA,CAACyB,KAAiB;IAC3BC,UAAU,CAAC,MAAK;MACd,IAAI,CAACZ,eAAe,GAAG,KAAK;IAC9B,CAAC,EAAE,IAAI,CAAC;EACV;EAEA;EACArB,aAAaA,CAAA;IACX,IAAI,CAACqB,eAAe,GAAG,CAAC,IAAI,CAACA,eAAe;EAC9C;EAEA;EACA/B,OAAOA,CAAA;IAEL,IAAI,CAACsC,MAAM,CAACM,aAAa,CAAC,WAAW,GAAE,IAAI,CAACpB,qBAAqB,CAACqB,IAAI,CAACC,MAAM,CAAC;EAChF;EAEA;EACAX,KAAKA,CAAA;IACH,IAAI,CAACX,qBAAqB,CAACW,KAAK,EAAE;EACpC;EAEA;EACA9B,MAAMA,CAAA;IACJ,IAAI,CAACmB,qBAAqB,CAACnB,MAAM,EAAE,CAAC0C,SAAS,CAAEC,QAAQ,IAAI;MACrDC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;IAC5B,CAAC,EACAC,KAAK,IAAI;MACRL,OAAO,CAACK,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CACF;EACL;;AAjDWlB,YAAY;mBAAZA,YAAY,EAAA7C,+DAAA,CAAAF,kFAAA,GAAAE,+DAAA,CAAAkE,mDAAA;AAAA;AAAZrB,YAAY;QAAZA,YAAY;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCbzB1E,4DAAA,WAAM;MAEFA,uDAAA,cAAsB;MAEtBA,4DAAA,WAAM;MACKA,oDAAA,eAAQ;MAAAA,0DAAA,EAAQ;MACvBA,uDAAA,cAAkN;MACtNA,0DAAA,EAAO;MACPA,4DAAA,WAAM;MAG8BA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAI;MAC1CA,uDAAA,eAA8C;MAC9CA,4DAAA,cAA4B;MAC1BA,wDAAA,KAAA6E,qCAAA,0BASe;MACf7E,wDAAA,KAAA8E,oCAAA,gCAAA9E,oEAAA,CAEc;MAChBA,0DAAA,EAAM;MAGVA,4DAAA,eAAqB;MACnBA,uDAAA,qBAA+B;MACjCA,0DAAA,EAAM;MACAA,4DAAA,kBAA0G;MAGtGA,oDAAA,wDACF;MAAAA,0DAAA,EAAM;;;;MAvBOA,uDAAA,IAA+C;MAA/CA,wDAAA,SAAA2E,GAAA,CAAA1C,qBAAA,CAAA+C,eAAA,GAA+C,aAAAC,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb7B;AACa;AACH;AACF;AACG;AACT;AACO;AACW;AACT;AACF;AACD;AACkB;AACP;AACT;AAEwB;AACJ;AACH;AAC0B;AACzC;AACiB;AACX;AACA;;AAE/D,MA0BaW,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,SAAA,GAFRhD,wDAAY;AAAA;AAEb+C,SAAS;aAHT,CAACN,0EAAiB,EAAEE,8DAAW,EAAEC,yEAAgB,EAAEC,gEAAY,CAAC;EAAA7F,OAAA,GARzEqF,wDAAW,EACXC,qEAAa,EACbI,mEAAgB,EAChB5F,iEAAgB,EAChBgG,0FAAuB,EACvBP,kEAAa,EACbC,kEAAa;AAAA;AAKK;;uHAATO,SAAS;IAAAE,YAAA,GAxBlBjD,wDAAY,EACZlE,+DAAa,EACbC,+DAAa,EACbC,gFAAkB,EAClBC,oFAAoB,EACpBC,kFAAmB,EACnBC,4GAA2B,EAC3BC,mEAAc,EACdC,oFAAmB,EACnBC,yEAAgB,EAChBC,yEAAgB;IAAAS,OAAA,GAGhBqF,wDAAW,EACXC,qEAAa,EACbI,mEAAgB,EAChB5F,iEAAgB,EAChBgG,0FAAuB,EACvBP,kEAAa,EACbC,kEAAa;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACxCjB,MAKa1G,aAAa;EAExBmE,YAAoBb,qBAA4C,EAAUc,MAAa;IAAnE,KAAAd,qBAAqB,GAArBA,qBAAqB;IAAiC,KAAAc,MAAM,GAANA,MAAM;IAC9E,IAAG,CAAC,IAAI,CAACd,qBAAqB,CAAC8D,YAAY,EACzC,IAAI,CAAC9D,qBAAqB,CAAC+D,eAAe,EAAE;EAChD;;AALWrH,aAAa;mBAAbA,aAAa,EAAAqB,+DAAA,CAAAF,kFAAA,GAAAE,+DAAA,CAAAkE,mDAAA;AAAA;AAAbvF,aAAa;QAAbA,aAAa;EAAAyF,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAyB,uBAAAvB,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX1B1E,uDAAA,aAAiF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEM3EA,4DAAA,aAAqD;IAC5BA,oDAAA,GAAe;IAAAA,0DAAA,EAAM;IAC5CA,4DAAA,cAAwB;IAAAA,oDAAA,GAA2B;;IAAAA,0DAAA,EAAM;;;;IADlCA,uDAAA,GAAe;IAAfA,+DAAA,CAAAmG,OAAA,CAAAhE,IAAA,CAAe;IACdnC,uDAAA,GAA2B;IAA3BA,+DAAA,CAAAA,yDAAA,OAAAmG,OAAA,CAAAE,KAAA,EAA2B;;;ADJ3D,MAKalH,gBAAgB;EAM3B2D,YAAoBwD,KAAqB,EAC7BC,qBAA4C,EAC5CxD,MAAc;IAFN,KAAAuD,KAAK,GAALA,KAAK;IACb,KAAAC,qBAAqB,GAArBA,qBAAqB;IACrB,KAAAxD,MAAM,GAANA,MAAM;IAPlB,KAAAyD,aAAa,GAAQ,EAAE;EAOM;EAE7BC,QAAQA,CAAA;IACN,IAAI,CAACH,KAAK,CAACI,WAAW,CAAClD,SAAS,CAACmD,MAAM,IAAG;MACxC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAAC,OAAO,CAAC,CAAC;MAChD,IAAI,CAACI,KAAK,GAAGJ,MAAM,CAAC,OAAO,CAAC;MAC5B,IAAI,CAACH,aAAa,GAAGI,YAAY;MACjC,MAAMI,cAAc,GAAG,IAAI,CAACT,qBAAqB,CAACU,iBAAiB,EAAE;MACrE,IAAID,cAAc,EAAE;QAClB,IAAI,CAACE,cAAc,GAAGF,cAAc,CAAC7E,IAAI;QACzC,IAAI,CAACgF,kBAAkB,GAAGH,cAAc,CAACnD,QAAQ;;IAErD,CAAC,CAAC;EACJ;EAGAuD,sBAAsBA,CAAA;IACpB,IAAIC,cAAc,GAAG,aAAa;IAElCA,cAAc,IAAI,GAAG,IAAI,CAACH,cAAc,IAAI;IAC5CG,cAAc,IAAI,GAAG,IAAI,CAACF,kBAAkB,MAAM;IAClDE,cAAc,IAAI,8BAA8B;IAEhDA,cAAc,IAAI,mBAAmB;IACrC,KAAK,MAAMC,IAAI,IAAI,IAAI,CAACd,aAAa,EAAE;MACrCa,cAAc,IAAI,KAAKC,IAAI,CAACnF,IAAI,MAAMmF,IAAI,CAACjB,KAAK,IAAI;;IAGtDgB,cAAc,IAAI,WAAW,GAAG,IAAI,CAACE,cAAc,EAAE;IACrD,OAAOF,cAAc;EACvB;EAIAG,eAAeA,CAAA;IACb,MAAMH,cAAc,GAAG,IAAI,CAACD,sBAAsB,EAAE;IACpD,MAAMK,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,cAAc,CAAC,EAAE;MAAEM,IAAI,EAAE;IAAY,CAAE,CAAC;IAC/D,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAAC9D,IAAI,GAAGiE,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;IACrCG,IAAI,CAACK,QAAQ,GAAG,aAAa;IAC7BL,IAAI,CAACM,KAAK,EAAE;EACd;EAEAX,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACf,aAAa,CAAC2B,MAAM,CAAC,CAACC,KAAU,EAAEd,IAAqB,KAAKc,KAAK,GAAGd,IAAI,CAACjB,KAAK,EAAE,CAAC,CAAC;EAChG;EAEAgC,MAAMA,CAAA;IACJ,IAAI,CAACtF,MAAM,CAACuF,QAAQ,CAAC,CAAC,cAAc,EAAE,IAAI,CAACvB,KAAK,CAAC,CAAC;EACpD;;AAzDW5H,gBAAgB;mBAAhBA,gBAAgB,EAAAa,+DAAA,CAAAF,2DAAA,GAAAE,+DAAA,CAAAkE,mFAAA,GAAAlE,+DAAA,CAAAF,mDAAA;AAAA;AAAhBX,gBAAgB;QAAhBA,gBAAgB;EAAAiF,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAiE,0BAAA/D,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT7B1E,4DAAA,aAAqB;MACbA,oDAAA,cAAO;MAAAA,0DAAA,EAAK;MAChBA,4DAAA,SAAI;MAAAA,oDAAA,GAAkB;MAAAA,0DAAA,EAAK;MAC3BA,4DAAA,SAAI;MAAAA,oDAAA,GAAsB;MAAAA,0DAAA,EAAK;MAC/BA,uDAAA,WAA4B;MAC5BA,4DAAA,aAAuB;MACrBA,wDAAA,IAAA0I,+BAAA,iBAGM;MACR1I,0DAAA,EAAM;MACNA,4DAAA,cAAmB;MAAAA,oDAAA,IAAwC;;MAAAA,0DAAA,EAAM;MACjEA,4DAAA,cAA6B;MACnBA,wDAAA,mBAAA2I,mDAAA;QAAA,OAAShE,GAAA,CAAA6C,eAAA,EAAiB;MAAA,EAAC;MAACxH,oDAAA,wBAAgB;MAAAA,0DAAA,EAAS;MAGjEA,4DAAA,iBAA+C;MAAvCA,wDAAA,mBAAA4I,mDAAA;QAAA,OAASjE,GAAA,CAAA0D,MAAA,EAAQ;MAAA,EAAC;MAAsBrI,oDAAA,gBAAO;MAAAA,0DAAA,EAAS;;;MAd1DA,uDAAA,GAAkB;MAAlBA,+DAAA,CAAA2E,GAAA,CAAAuC,cAAA,CAAkB;MAClBlH,uDAAA,GAAsB;MAAtBA,+DAAA,CAAA2E,GAAA,CAAAwC,kBAAA,CAAsB;MAGFnH,uDAAA,GAAgB;MAAhBA,wDAAA,YAAA2E,GAAA,CAAA6B,aAAA,CAAgB;MAKrBxG,uDAAA,GAAwC;MAAxCA,gEAAA,YAAAA,yDAAA,QAAA2E,GAAA,CAAA4C,cAAA,QAAwC;;;;;;;;;;;;;;;;;;;;;;;;;;ACTzB;AAE2B;;;;;;;;ICoBjDvH,4DAAA,SAA4D;IACtDA,oDAAA,GAAuB;IAAAA,0DAAA,EAAK;IAChCA,4DAAA,SAAI;IAAAA,oDAAA,GAAmB;IAAAA,0DAAA,EAAK;IAC5BA,4DAAA,SAAI;IAAAA,oDAAA,GAAoB;IAAAA,0DAAA,EAAK;;;;IAFzBA,uDAAA,GAAuB;IAAvBA,+DAAA,CAAA8I,WAAA,CAAAC,QAAA,CAAuB;IACvB/I,uDAAA,GAAmB;IAAnBA,+DAAA,CAAA8I,WAAA,CAAA3G,IAAA,CAAmB;IACnBnC,uDAAA,GAAoB;IAApBA,+DAAA,CAAA8I,WAAA,CAAAzC,KAAA,CAAoB;;;ADrB1C,MAMaxH,kBAAkB;EAG7BiE,YACUkG,iBAAmC,EACnC1C,KAAqB;IADrB,KAAA0C,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAA1C,KAAK,GAALA,KAAK;IAHf,KAAAS,KAAK,GAAkB,IAAI;EAIxB;EAEHN,QAAQA,CAAA;IAEN;IACA,IAAI,CAACH,KAAK,CAAC2C,MAAM,EAAEtC,MAAM,CAACnD,SAAS,CAACmD,MAAM,IAAG;MAC3C,IAAI,CAACI,KAAK,GAAGJ,MAAM,CAAC,OAAO,CAAC;IAC9B,CAAC,CAAC;IAEF,IAAI,CAACL,KAAK,CAACK,MAAM,CAACnD,SAAS,CAACmD,MAAM,IAAG;MAEnC;MACA,MAAMuC,MAAM,GAAGvC,MAAM,CAAC,QAAQ,CAAC;MAE/B;MACA,IAAG,IAAI,CAACI,KAAK,IAAImC,MAAM,EACvB;QACE,IAAI,CAACF,iBAAiB,CAACG,YAAY,CAAC,IAAI,CAACpC,KAAK,EAAEmC,MAAM,CAAC,CAAC1F,SAAS,CAAE4F,IAA8B,IAAI;UACnG,IAAI,CAACC,SAAS,GAAGR,wCAAE,CAACO,IAAI,CAAC;QAC3B,CAAC,CAAC;;IAEN,CAAC,CAAC;EAEH;;AA7BUvK,kBAAkB;mBAAlBA,kBAAkB,EAAAmB,+DAAA,CAAAF,yEAAA,GAAAE,+DAAA,CAAAkE,2DAAA;AAAA;AAAlBrF,kBAAkB;QAAlBA,kBAAkB;EAAAuF,SAAA;EAAAkF,QAAA,GAAAtJ,gEAAA,CAFlB,CAACyF,yEAAgB,CAAC;EAAApB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAgF,4BAAA9E,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV/B1E,4DAAA,WAAM;MAEFA,uDAAA,cAAsB;MAEtBA,4DAAA,WAAM;MACKA,oDAAA,WAAI;MAAAA,0DAAA,EAAQ;MACnBA,uDAAA,cAAkN;MACtNA,0DAAA,EAAO;MACPA,4DAAA,WAAM;MAEFA,uDAAA,eAAqB;MACvBA,0DAAA,EAAS;MACTA,4DAAA,cAAuB;MAMPA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAK;MACjBA,4DAAA,UAAI;MAAAA,oDAAA,YAAI;MAAAA,0DAAA,EAAK;MACbA,4DAAA,UAAI;MAAAA,oDAAA,aAAK;MAAAA,0DAAA,EAAK;MAGlBA,4DAAA,aAAO;MACLA,wDAAA,KAAAyJ,iCAAA,gBAIK;;MACPzJ,0DAAA,EAAQ;MAEVA,uDAAA,qBAA+B;MACnCA,0DAAA,EAAM;MAEJA,oDAAA,UACR;MAAAA,0DAAA,EAAO;;;;MAXgCA,uDAAA,IAAiC;MAAjCA,wDAAA,aAAA0J,OAAA,GAAA1J,yDAAA,QAAA2E,GAAA,CAAA0E,SAAA,oBAAAK,OAAA,qBAAAA,OAAA,IAAAC,IAAA,CAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBpB;AACjB;AAC4B;;;;;;;;;;ICSjD3J,4DAAA,YAAuD;IAKnDA,oDAAA,GACF;IAAAA,0DAAA,EAAI;;;;;IAJDA,uDAAA,GAAoE;IAApEA,wDAAA,eAAAA,6DAAA,IAAA6J,GAAA,EAAA7H,MAAA,CAAA+E,KAAA,EAAA+C,OAAA,CAAAZ,MAAA,EAAoE;IAGrElJ,uDAAA,GACF;IADEA,gEAAA,MAAA8J,OAAA,CAAA3H,IAAA,MACF;;;ADZlB,MAOavD,aAAa;EAIxBkE,YACUiH,YAAyB,EACzBzD,KAAqB;IADrB,KAAAyD,YAAY,GAAZA,YAAY;IACZ,KAAAzD,KAAK,GAALA,KAAK;IAHf,KAAAS,KAAK,GAAkB,IAAI;EAIxB;EAEHN,QAAQA,CAAA;IAEN;IACE,IAAI,CAACH,KAAK,CAAC2C,MAAM,EAAEtC,MAAM,CAACnD,SAAS,CAACmD,MAAM,IAAG;MAC3C,IAAI,CAACI,KAAK,GAAGJ,MAAM,CAAC,OAAO,CAAC;MAC5BjD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAC,IAAI,CAACoD,KAAK,CAAC;MACjC,IAAI,IAAI,CAACA,KAAK,EAAE;QACd,IAAI,CAACgD,YAAY,CAACC,OAAO,CAAC,IAAI,CAACjD,KAAK,CAAC,CAACvD,SAAS,CAAE4F,IAAyB,IAAI;UAC5E,IAAI,CAACO,IAAI,GAAGd,wCAAE,CAACO,IAAI,CAAC;QACtB,CAAC,CAAC;;IAEN,CAAC,CAAC;EACN;;AArBWxK,aAAa;mBAAbA,aAAa,EAAAoB,+DAAA,CAAAF,8DAAA,GAAAE,+DAAA,CAAAkE,2DAAA;AAAA;AAAbtF,aAAa;QAAbA,aAAa;EAAAwF,SAAA;EAAAkF,QAAA,GAAAtJ,gEAAA,CAHb,CAACwF,8DAAW,EAAEC,yEAAgB,CAAC;EAAApB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAyF,uBAAAvF,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZ5C1E,4DAAA,WAAM;MAEFA,uDAAA,cAAsB;MAEtBA,4DAAA,WAAM;MACKA,oDAAA,WAAI;MAAAA,0DAAA,EAAQ;MACnBA,uDAAA,cAAkN;MACtNA,0DAAA,EAAO;MACPA,4DAAA,WAAM;MAMMA,wDAAA,KAAAkK,4BAAA,gBAOK;;MACPlK,0DAAA,EAAK;MAEPA,uDAAA,qBAA+B;MACjCA,0DAAA,EAAM;;;MAXsCA,uDAAA,IAAe;MAAfA,wDAAA,YAAAA,yDAAA,QAAA2E,GAAA,CAAAgF,IAAA,EAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbH;AAE5B;AAEkB;;;;;;;;;;;ICY1C3J,4DAAA,SAA4D;IAGYA,wDAAA,oBAAAmK,2DAAA;MAAA,MAAAC,WAAA,GAAApK,2DAAA,CAAAqK,GAAA;MAAA,MAAAC,WAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAC,MAAA,GAAAxK,2DAAA;MAAA,OAAYA,yDAAA,CAAAwK,MAAA,CAAAC,eAAA,CAAAH,WAAA,CAAAI,MAAA,EAAAJ,WAAA,CAAAjE,KAAA,EAAAiE,WAAA,CAAAnI,IAAA,CAA+D;IAAA,EAAC;IAA9InC,0DAAA,EAA0L;IAG9LA,4DAAA,SAAI;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAK;IAC/BA,4DAAA,SAAI;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAK;IAC3BA,4DAAA,SAAI;IAAAA,oDAAA,GAAmB;IAAAA,0DAAA,EAAK;;;;;IALeA,uDAAA,GAA0B;IAA1BA,wDAAA,UAAAsK,WAAA,kBAAAA,WAAA,CAAAI,MAAA,CAA0B,YAAA1I,MAAA,CAAA2I,UAAA,CAAAL,WAAA,CAAAI,MAAA;IAGjE1K,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAsK,WAAA,CAAAvB,QAAA,CAAsB;IACtB/I,uDAAA,GAAkB;IAAlBA,+DAAA,CAAAsK,WAAA,CAAAnI,IAAA,CAAkB;IAClBnC,uDAAA,GAAmB;IAAnBA,+DAAA,CAAAsK,WAAA,CAAAjE,KAAA,CAAmB;;;;;;IAM/BrG,4DAAA,aAAmD;IACFA,wDAAA,mBAAA4K,4DAAA;MAAA5K,2DAAA,CAAA6K,GAAA;MAAA,MAAAC,MAAA,GAAA9K,2DAAA;MAAA,OAASA,yDAAA,CAAA8K,MAAA,CAAAC,eAAA,EAAiB;IAAA,EAAC;IAAC/K,oDAAA,uBAAgB;IAAAA,0DAAA,EAAS;;;ADvB9G,MAOad,mBAAmB;EAU9B4D,YACUkG,iBAAmC,EACnCgC,aAA2B,EAC3B1E,KAAqB,EACrBvD,MAAc;IAHd,KAAAiG,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAAgC,aAAa,GAAbA,aAAa;IACb,KAAA1E,KAAK,GAALA,KAAK;IACL,KAAAvD,MAAM,GAANA,MAAM;IARhB,KAAAyD,aAAa,GAAU,EAAE;IACzB,KAAAI,YAAY,GAAU,EAAE;IACxB,KAAAqE,cAAc,GAAY,KAAK;EAO5B;EAEHxE,QAAQA,CAAA;IACN;IACA,IAAI,CAACyE,OAAO,GAAG,EAAE;IACjB,IAAI,CAAC1E,aAAa,GAAG,EAAE;IACvB;IACA,IAAI,CAACF,KAAK,CAAC2C,MAAM,EAAEtC,MAAM,CAACnD,SAAS,CAACmD,MAAM,IAAG;MAC3C,IAAI,CAACI,KAAK,GAAGJ,MAAM,CAAC,OAAO,CAAC;IAC9B,CAAC,CAAC;IAEF,IAAI,CAACL,KAAK,CAACK,MAAM,CAACnD,SAAS,CAACmD,MAAM,IAAG;MACnC;MACA,IAAI,CAACuC,MAAM,GAAGvC,MAAM,CAAC,QAAQ,CAAC;MAE9B;MACA,IAAG,IAAI,CAACI,KAAK,IAAI,IAAI,CAACmC,MAAM,EAAE;QAC5B,IAAI,CAACF,iBAAiB,CAACG,YAAY,CAAC,IAAI,CAACpC,KAAK,EAAE,IAAI,CAACmC,MAAM,CAAC,CAAC1F,SAAS,CAAE4F,IAA8B,IAAI;UACxG,IAAI,CAACC,SAAS,GAAGR,wCAAE,CAACO,IAAI,CAAC;QAC3B,CAAC,CAAC;;IAEN,CAAC,CAAC;EACJ;EAEAqB,eAAeA,CAACC,MAAc,EAAErE,KAAa,EAAElE,IAAY;IACzD,IAAI,IAAI,CAACwI,UAAU,CAACD,MAAM,CAAC,EAAE;MAC3B,IAAI,CAAClE,aAAa,GAAG,IAAI,CAACA,aAAa,CAAC2E,MAAM,CAAC7D,IAAI,IAAIA,IAAI,KAAKoD,MAAM,CAAC;MACvE,IAAI,CAAC9D,YAAY,GAAG,IAAI,CAACA,YAAY,CAACuE,MAAM,CAAC7D,IAAI,IAAIA,IAAI,CAACoD,MAAM,KAAKA,MAAM,CAAC;MAC5EhH,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAE,IAAI,CAACiD,YAAY,CAAE;MAChFlD,OAAO,CAACC,GAAG,CAAC,mDAAmD,EAAE,IAAI,CAAC6C,aAAa,CAAE;KACtF,MAAM;MACL,IAAI,CAACA,aAAa,CAAC4E,IAAI,CAACV,MAAM,CAAC;MAC/B,IAAI,CAAC9D,YAAY,CAACwE,IAAI,CAAC;QAAEV,MAAM;QAAEvI,IAAI;QAAEkE;MAAK,CAAE,CAAC;MAC/C3C,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAE,IAAI,CAACiD,YAAY,CAAC;MAC9ElD,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAE,IAAI,CAAC6C,aAAa,CAAC;;EAEpF;EAEA;EACAmE,UAAUA,CAACD,MAAW;IACpB,OAAO,IAAI,CAAClE,aAAa,CAAC6E,QAAQ,CAACX,MAAM,CAAC;EAC5C;EAEAY,SAASA,CAAA;IACP,IAAI,IAAI,CAAC9E,aAAa,CAAC+E,MAAM,KAAK,CAAC,EAAE;MACnCC,KAAK,CAAC,iCAAiC,CAAC;MACxC;;IAGF,IAAI,CAACN,OAAO,GAAG,IAAI,CAAC1E,aAAa;IACjC;IACA,IAAI,CAACiF,QAAQ,GAAG,IAAI,CAACP,OAAO,CAACK,MAAM;IAEnC,IAAInC,IAAI,GAAG;MACT,YAAY,EAAE,WAAW;MACzBqC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBP,OAAO,EAAE,IAAI,CAACA;KACf;IACDxH,OAAO,CAACC,GAAG,CAACyF,IAAI,CAAC;IACjB,IAAI,CAAC4B,aAAa,CAACU,SAAS,CAACtC,IAAI,EAAE,IAAI,CAACrC,KAAK,EAAE,IAAI,CAACmC,MAAM,CAAC,CAAC1F,SAAS,CAACC,QAAQ,IAAG;MAC/EC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACwH,cAAc,GAAG,IAAI;IAC5B,CAAC,CAAC;EACJ;EAEAF,eAAeA,CAAA;IACb,IAAI,IAAI,CAACnE,YAAY,CAAC2E,MAAM,KAAK,CAAC,EAAE;MAClC7H,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD;;IAGFD,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACiD,YAAY,CAAC;IACvD,IAAI,CAAC7D,MAAM,CAACuF,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;MAAE5B,WAAW,EAAE;QAAEiF,KAAK,EAAE9E,IAAI,CAAC+E,SAAS,CAAC,IAAI,CAAChF,YAAY,CAAC;QAAEG,KAAK,EAAE,IAAI,CAACA;MAAK;IAAE,CAAE,CAAC;EACtH;;AAxFW7H,mBAAmB;mBAAnBA,mBAAmB,EAAAc,+DAAA,CAAAF,yEAAA,GAAAE,+DAAA,CAAAkE,gEAAA,GAAAlE,+DAAA,CAAA6L,2DAAA,GAAA7L,+DAAA,CAAA6L,mDAAA;AAAA;AAAnB3M,mBAAmB;QAAnBA,mBAAmB;EAAAkF,SAAA;EAAAkF,QAAA,GAAAtJ,gEAAA,CAHnB,CAACyF,yEAAgB,EAAEC,gEAAY,CAAC;EAAArB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAsH,6BAAApH,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCb7C1E,4DAAA,aAAQ;MACNA,uDAAA,gBAAuB;MACzBA,0DAAA,EAAS;MACTA,4DAAA,aAAuB;MAGXA,wDAAA,oBAAA+L,oDAAA;QAAA,OAAUpH,GAAA,CAAA2G,SAAA,EAAW;MAAA,EAAC;MACxBtL,4DAAA,eAAqB;MAGXA,oDAAA,cAAM;MAAAA,0DAAA,EAAK;MACfA,4DAAA,UAAI;MAAAA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAK;MACjBA,4DAAA,UAAI;MAAAA,oDAAA,YAAI;MAAAA,0DAAA,EAAK;MACbA,4DAAA,UAAI;MAAAA,oDAAA,aAAK;MAAAA,0DAAA,EAAK;MAGlBA,4DAAA,aAAO;MACLA,wDAAA,KAAAgM,kCAAA,iBASK;;MACPhM,0DAAA,EAAQ;MAEVA,4DAAA,iBAAmF;MAAAA,oDAAA,cAAM;MAAAA,0DAAA,EAAS;MAEpGA,wDAAA,KAAAiM,mCAAA,iBAEM;MACRjM,uDAAA,qBAA+B;MACnCA,0DAAA,EAAM;;;;MAlB+BA,uDAAA,IAAiC;MAAjCA,wDAAA,aAAA0J,OAAA,GAAA1J,yDAAA,QAAA2E,GAAA,CAAA0E,SAAA,oBAAAK,OAAA,qBAAAA,OAAA,IAAAC,IAAA,CAAiC;MAcnC3J,uDAAA,GAAoB;MAApBA,wDAAA,SAAA2E,GAAA,CAAAsG,cAAA,CAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BD;AAElB;AAIgB;;;;;;;;;;ICMtCjL,4DAAA,YAAuD;IAKnDA,oDAAA,GACF;IAAAA,0DAAA,EAAI;;;;;IAJFA,uDAAA,GAA6E;IAA7EA,wDAAA,eAAAA,6DAAA,IAAA6J,GAAA,EAAA7H,MAAA,CAAA+E,KAAA,EAAA+C,OAAA,CAAAZ,MAAA,EAA6E;IAG7ElJ,uDAAA,GACF;IADEA,gEAAA,MAAA8J,OAAA,CAAA3H,IAAA,MACF;;;ADVlB,MAMalD,cAAc;EAGzB6D,YACUiH,YAAyB,EACzBzD,KAAqB;IADrB,KAAAyD,YAAY,GAAZA,YAAY;IACZ,KAAAzD,KAAK,GAALA,KAAK;IAHf,KAAAS,KAAK,GAAkB,IAAI;EAIzB;EACFN,QAAQA,CAAA;IAEN;IACE,IAAI,CAACH,KAAK,CAAC2C,MAAM,EAAEtC,MAAM,CAACnD,SAAS,CAACmD,MAAM,IAAG;MAC3C,IAAI,CAACI,KAAK,GAAGJ,MAAM,CAAC,OAAO,CAAC;MAC5B,IAAI,IAAI,CAACI,KAAK,EAAE;QACd,IAAI,CAACgD,YAAY,CAACC,OAAO,CAAC,IAAI,CAACjD,KAAK,CAAC,CAACvD,SAAS,CAAE4F,IAAyB,IAAI;UAC5E,IAAI,CAACO,IAAI,GAAGd,wCAAE,CAACO,IAAI,CAAC;QACtB,CAAC,CAAC;;IAEN,CAAC,CAAC;EACN;;AAlBWnK,cAAc;mBAAdA,cAAc,EAAAe,+DAAA,CAAAF,8DAAA,GAAAE,+DAAA,CAAAkE,2DAAA;AAAA;AAAdjF,cAAc;QAAdA,cAAc;EAAAmF,SAAA;EAAAkF,QAAA,GAAAtJ,gEAAA,CAFd,CAAC0F,gEAAY,EAAEF,8DAAW,CAAC;EAAAnB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAA0H,wBAAAxH,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCdxC1E,4DAAA,WAAM;MAEFA,uDAAA,cAAsB;MAEtBA,4DAAA,WAAM;MACKA,oDAAA,WAAI;MAAAA,0DAAA,EAAQ;MACnBA,uDAAA,cAAkN;MACtNA,0DAAA,EAAO;MACPA,4DAAA,WAAM;MAMMA,wDAAA,KAAAmM,6BAAA,gBAOK;;MACPnM,0DAAA,EAAK;MAEPA,uDAAA,qBAA+B;MACjCA,0DAAA,EAAM;;;MAXsCA,uDAAA,IAAe;MAAfA,wDAAA,YAAAA,yDAAA,QAAA2E,GAAA,CAAAgF,IAAA,EAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEiBrD3J,4DAAA,cAAgE;IAC9DA,oDAAA,6DACJ;IAAAA,0DAAA,EAAM;;;AD3BpB,MAKaZ,gBAAgB;EAM3B0D,YAAoBb,qBAA4C,EAAUc,MAAc;IAApE,KAAAd,qBAAqB,GAArBA,qBAAqB;IAAiC,KAAAc,MAAM,GAANA,MAAM;IAHhF,KAAAqJ,YAAY,GAAQ,EAAE;IACtB,KAAAC,UAAU,GAA+B,EAAE;IAGzC,IAAI,CAACC,sBAAsB,EAAE;EAC/B;EAEA;EACAA,sBAAsBA,CAAA;IACpB,MAAMpK,QAAQ,GAAG,IAAI,CAACD,qBAAqB,CAACC,QAAQ;IAEpD,IAAI,CAACkK,YAAY,GAAG;MAClBjK,IAAI,EAAED,QAAQ,CAACC,IAAI;MACnBE,UAAU,EAAEH,QAAQ,CAACG,UAAU;MAC/BkK,KAAK,EAAErK,QAAQ,CAACqK,KAAK;MACrBC,aAAa,EAAEtK,QAAQ,CAACsK,aAAa;MACrCC,OAAO,EAAEvK,QAAQ,CAACuK,OAAO;MACzBC,YAAY,EAAExK,QAAQ,CAACwK;KACxB;EACH;EAEA;EACAC,2BAA2BA,CAAA;IAEzB,OAAQ,IAAI,CAACP,YAAY,CAACG,KAAK,KAAK,IAAI,CAACtK,qBAAqB,CAACqB,IAAI,CAACiJ,KAAK;EAC3E;EAEA;EACAK,UAAUA,CAACC,KAAY,EAAEC,QAAiB;IACxC,IAAI,CAACT,UAAU,CAACQ,KAAK,CAAC,GAAGC,QAAQ;EACnC;EAEA;EACAC,YAAYA,CAAA;IAEV,KAAK,MAAMF,KAAK,IAAI,IAAI,CAACR,UAAU,EAAE;MACnC,IAAI,CAACA,UAAU,CAACQ,KAAK,CAAC,GAAG,KAAK;;EAElC;EAEA;EACAG,WAAWA,CAAA;IAET,IAAG,IAAI,CAACZ,YAAY,KAAK,IAAI,CAACnK,qBAAqB,CAACC,QAAQ,EAC5D;MACEwB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC,IAAI,CAACZ,MAAM,CAACM,aAAa,CAAC,GAAG,CAAC;KAC/B,MAED;MACE,IAAI,CAACpB,qBAAqB,CAACgL,aAAa,CAAC,IAAI,CAACb,YAAY,CAAC,CAAC5I,SAAS,CAClEC,QAAa,IAAI;QAChBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC3C,IAAI,CAACZ,MAAM,CAACM,aAAa,CAAC,GAAG,CAAC;MAChC,CAAC,EACAU,KAAU,IAAI;QACbL,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CACF;;EAGL;EAEAmJ,YAAYA,CAAA;IAEV,IAAI,CAACnK,MAAM,CAACM,aAAa,CAAC,GAAG,CAAC;EAChC;;AArEWjE,gBAAgB;mBAAhBA,gBAAgB,EAAAY,+DAAA,CAAAF,kFAAA,GAAAE,+DAAA,CAAAkE,mDAAA;AAAA;AAAhB9E,gBAAgB;QAAhBA,gBAAgB;EAAAgF,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAA2I,0BAAAzI,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX7B1E,4DAAA,WAAM;MAEFA,uDAAA,cAAsB;MAEtBA,4DAAA,WAAM;MACKA,oDAAA,cAAO;MAAAA,0DAAA,EAAQ;MACtBA,uDAAA,cAAkN;MACtNA,0DAAA,EAAO;MACPA,4DAAA,WAAM;MAEwBA,wDAAA,mBAAAoN,+CAAA;QAAA,OAASzI,GAAA,CAAAoI,YAAA,EAAc;MAAA,EAAC;MAChD/M,4DAAA,cAAwB;MACEA,oDAAA,uBAAe;MAAAA,0DAAA,EAAQ;MAC/CA,4DAAA,cAAyB;MACvBA,uDAAA,cAAqF;MACvFA,0DAAA,EAAM;MAERA,4DAAA,cAAwB;MACJA,oDAAA,YAAI;MAAAA,0DAAA,EAAQ;MAC9BA,4DAAA,cAAyB;MACmCA,wDAAA,2BAAAqN,0DAAA7L,MAAA;QAAA,OAAAmD,GAAA,CAAAyH,YAAA,CAAAjK,IAAA,GAAAX,MAAA;MAAA,EAA+B,mBAAA8L,kDAAA9L,MAAA;QAAA,OAAoEA,MAAA,CAAA+L,eAAA,EAAwB;MAAA,EAA5F,kBAAAC,iDAAA;QAAA,OAAuG7I,GAAA,CAAAiI,UAAA,CAAW,MAAM,EAAE,KAAK,CAAC;MAAA,EAAhI;MAAzF5M,0DAAA,EAAoO;MACpOA,4DAAA,aAAmF;MAA9DA,wDAAA,mBAAAyN,8CAAAjM,MAAA;QAASmD,GAAA,CAAAiI,UAAA,CAAW,MAAM,EAAE,IAAI,CAAC;QAAA,OAAEpL,MAAA,CAAA+L,eAAA,EAAwB;MAAA,EAAE;MAACvN,oDAAA,cAAO;MAAAA,0DAAA,EAAI;MAGlGA,4DAAA,eAAuC;MAEhBA,oDAAA,kBAAU;MAAAA,0DAAA,EAAQ;MACrCA,4DAAA,cAAyB;MACsCA,wDAAA,2BAAA0N,0DAAAlM,MAAA;QAAA,OAAAmD,GAAA,CAAAyH,YAAA,CAAAG,KAAA,GAAA/K,MAAA;MAAA,EAAgC,mBAAAmM,kDAAAnM,MAAA;QAAA,OAA4CA,MAAA,CAAA+L,eAAA,EAAwB;MAAA,EAApE,kBAAAK,iDAAA;QAAA,OAA8EjJ,GAAA,CAAAiI,UAAA,CAAW,OAAO,EAAE,KAAK,CAAC;MAAA,EAAxG;MAA7F5M,0DAAA,EAAgN;MAChNA,4DAAA,aAAoF;MAA/DA,wDAAA,mBAAA6N,8CAAArM,MAAA;QAASmD,GAAA,CAAAiI,UAAA,CAAW,OAAO,EAAE,IAAI,CAAC;QAAA,OAAEpL,MAAA,CAAA+L,eAAA,EAAwB;MAAA,EAAE;MAACvN,oDAAA,cAAO;MAAAA,0DAAA,EAAI;MAE/FA,wDAAA,KAAA8N,gCAAA,kBAEI;MACR9N,0DAAA,EAAM;MACNA,4DAAA,eAA6B;MACRA,oDAAA,eAAO;MAAAA,0DAAA,EAAQ;MAClCA,4DAAA,cAAyB;MACmCA,wDAAA,2BAAA+N,0DAAAvM,MAAA;QAAA,OAAAmD,GAAA,CAAAyH,YAAA,CAAAI,aAAA,GAAAhL,MAAA;MAAA,EAAwC,mBAAAwM,kDAAAxM,MAAA;QAAA,OAA4CA,MAAA,CAAA+L,eAAA,EAAwB;MAAA,EAApE,kBAAAU,iDAAA;QAAA,OAA+EtJ,GAAA,CAAAiI,UAAA,CAAW,OAAO,EAAE,KAAK,CAAC;MAAA,EAAzG;MAAlG5M,0DAAA,EAA6M;MAC7MA,4DAAA,aAAmF;MAA9DA,wDAAA,mBAAAkO,8CAAA1M,MAAA;QAASmD,GAAA,CAAAiI,UAAA,CAAW,OAAO,EAAE,IAAI,CAAC;QAAA,OAAEpL,MAAA,CAAA+L,eAAA,EAAwB;MAAA,EAAC;MAACvN,oDAAA,cAAO;MAAAA,0DAAA,EAAI;MAIpGA,4DAAA,cAAwB;MACDA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAQ;MACrCA,4DAAA,cAAyB;MACsCA,wDAAA,2BAAAmO,0DAAA3M,MAAA;QAAA,OAAAmD,GAAA,CAAAyH,YAAA,CAAAK,OAAA,GAAAjL,MAAA;MAAA,EAAkC,mBAAA4M,kDAAA5M,MAAA;QAAA,OAA8CA,MAAA,CAAA+L,eAAA,EAAwB;MAAA,EAAtE,kBAAAc,iDAAA;QAAA,OAAgF1J,GAAA,CAAAiI,UAAA,CAAW,SAAS,EAAE,KAAK,CAAC;MAAA,EAA5G;MAA/F5M,0DAAA,EAA6M;MAC7MA,4DAAA,aAAqF;MAAhEA,wDAAA,mBAAAsO,8CAAA9M,MAAA;QAASmD,GAAA,CAAAiI,UAAA,CAAW,SAAS,EAAE,IAAI,CAAC;QAAA,OAAEpL,MAAA,CAAA+L,eAAA,EAAwB;MAAA,EAAC;MAACvN,oDAAA,cAAO;MAAAA,0DAAA,EAAI;MAGpGA,4DAAA,eAA0C;MACdA,oDAAA,kCAA0B;MAAAA,0DAAA,EAAQ;MAC5DA,4DAAA,kBAAyH;MAApFA,wDAAA,2BAAAuO,2DAAA/M,MAAA;QAAA,OAAAmD,GAAA,CAAAyH,YAAA,CAAAM,YAAA,GAAAlL,MAAA;MAAA,EAAuC,mBAAAgN,mDAAAhN,MAAA;QAAA,OAAUA,MAAA,CAAA+L,eAAA,EAAwB;MAAA,EAAlC;MAC1EvN,4DAAA,kBAAyB;MAAAA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAS;MAC1CA,4DAAA,kBAAwB;MAAAA,oDAAA,eAAO;MAAAA,0DAAA,EAAS;MAG5CA,4DAAA,eAA0B;MACsBA,wDAAA,mBAAAyO,mDAAAjN,MAAA;QAASmD,GAAA,CAAAqI,WAAA,EAAa;QAAA,OAAExL,MAAA,CAAA+L,eAAA,EAAwB;MAAA,EAAC;MAACvN,oDAAA,oBAAY;MAAAA,0DAAA,EAAS;MACrHA,4DAAA,kBAAkG;MAApDA,wDAAA,mBAAA0O,mDAAAlN,MAAA;QAASmD,GAAA,CAAAuI,YAAA,EAAc;QAAA,OAAG1L,MAAA,CAAA+L,eAAA,EAAwB;MAAA,EAAC;MAACvN,oDAAA,cAAM;MAAAA,0DAAA,EAAS;MAIrHA,uDAAA,qBAA+B;MACnCA,0DAAA,EAAO;;;MAlDgCA,uDAAA,IAAiC;MAAjCA,mEAAA,QAAA2E,GAAA,CAAAyH,YAAA,CAAA/J,UAAA,EAAArC,2DAAA,CAAiC;MAMJA,uDAAA,GAA+B;MAA/BA,wDAAA,YAAA2E,GAAA,CAAAyH,YAAA,CAAAjK,IAAA,CAA+B,cAAAwC,GAAA,CAAA0H,UAAA,uBAAA1H,GAAA,CAAA0H,UAAA;MAQ1BrM,uDAAA,GAAgC;MAAhCA,wDAAA,YAAA2E,GAAA,CAAAyH,YAAA,CAAAG,KAAA,CAAgC,cAAA5H,GAAA,CAAA0H,UAAA;MAGnErM,uDAAA,GAAoC;MAApCA,wDAAA,UAAA2E,GAAA,CAAAgI,2BAAA,GAAoC;MAOJ3M,uDAAA,GAAwC;MAAxCA,wDAAA,YAAA2E,GAAA,CAAAyH,YAAA,CAAAI,aAAA,CAAwC,cAAA7H,GAAA,CAAA0H,UAAA;MAQvCrM,uDAAA,GAAkC;MAAlCA,wDAAA,YAAA2E,GAAA,CAAAyH,YAAA,CAAAK,OAAA,CAAkC,cAAA9H,GAAA,CAAA0H,UAAA;MAM5DrM,uDAAA,GAAuC;MAAvCA,wDAAA,YAAA2E,GAAA,CAAAyH,YAAA,CAAAM,YAAA,CAAuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CxF,MAKa1N,2BAA2B;EAGpC8D,YACUwD,KAAqB,EACrBqI,OAA0B;IAD1B,KAAArI,KAAK,GAALA,KAAK;IACL,KAAAqI,OAAO,GAAPA,OAAO;EACd;EAEHlI,QAAQA,CAAA;IACN,MAAMM,KAAK,GAAG,IAAI,CAACT,KAAK,CAAC2C,MAAM,EAAE2F,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,OAAO,CAAE;IAChEpL,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEoD,KAAK,CAAC;IAC5B,IAAI,CAAC4H,OAAO,CAACI,wBAAwB,CAAChI,KAAK,CAAC,CAACvD,SAAS,CACpD4F,IAAI,IAAG;MACL,IAAI,CAAC4F,UAAU,GAAG5F,IAAI;MACtB1F,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACqL,UAAU,CAAC7M,IAAI,CAAC;IACjD,CAAC,CACF;EACH;;AAjBSnD,2BAA2B;mBAA3BA,2BAA2B,EAAAgB,+DAAA,CAAAF,2DAAA,GAAAE,+DAAA,CAAAkE,0EAAA;AAAA;AAA3BlF,2BAA2B;QAA3BA,2BAA2B;EAAAoF,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAyK,qCAAAvK,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXxC1E,4DAAA,aAAuB;MAGbA,oDAAA,GAAqB;MAAAA,0DAAA,EAAK;MAC9BA,uDAAA,SAAM;MACNA,4DAAA,aAAiB;MAIqBA,oDAAA,YAAI;MAAAA,0DAAA,EAAW;MAC7CA,4DAAA,iBAAwB;MAAAA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAS;MAE3CA,4DAAA,eAAwB;MAAAA,oDAAA,IAAuB;MAAAA,0DAAA,EAAO;MAG1DA,4DAAA,cAAsB;MAGYA,oDAAA,eAAO;MAAAA,0DAAA,EAAW;MAC9CA,4DAAA,iBAAwB;MAAAA,oDAAA,eAAO;MAAAA,0DAAA,EAAS;MAE1CA,4DAAA,eAAwB;MAAAA,oDAAA,IAAwB;MAAAA,0DAAA,EAAO;MAG3DA,4DAAA,cAAsB;MAGaA,oDAAA,oBAAY;MAAAA,0DAAA,EAAW;MACpDA,4DAAA,iBAAwB;MAAAA,oDAAA,aAAK;MAAAA,0DAAA,EAAS;MAExCA,4DAAA,eAAwB;MAAAA,oDAAA,IAAqB;MAAAA,0DAAA,EAAO;MAIxDA,4DAAA,cAAsB;MAEQA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAS;MAC3CA,4DAAA,eAAwB;MAAAA,oDAAA,IAAyB;MAAAA,0DAAA,EAAO;MAKhEA,uDAAA,UAAM;MACNA,4DAAA,eAAyD;MACnDA,oDAAA,aAAK;MAAAA,0DAAA,EAAK;MACdA,4DAAA,eAAsB;MACpBA,uDAAA,SAAO;MACPA,4DAAA,cAA4B;MAEIA,oDAAA,aAAK;MAAAA,0DAAA,EAAW;MAC5CA,4DAAA,iBAAwB;MAAAA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAS;MAE3CA,4DAAA,eAAwB;MAAAA,oDAAA,IAAwB;MAAAA,0DAAA,EAAO;MAEzDA,uDAAA,SAAO;MACPA,4DAAA,cAA4B;MAEIA,oDAAA,qBAAa;MAAAA,0DAAA,EAAW;MACpDA,4DAAA,iBAAwB;MAAAA,oDAAA,qBAAa;MAAAA,0DAAA,EAAS;MAEhDA,4DAAA,eAAwB;MAAAA,oDAAA,IAA8B;MAAAA,0DAAA,EAAO;MAE/DA,uDAAA,SAAO;MACPA,4DAAA,cAA4B;MAEIA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAW;MAC/CA,4DAAA,iBAAwB;MAAAA,oDAAA,cAAM;MAAAA,0DAAA,EAAS;MAEzCA,4DAAA,eAAwB;MAAAA,oDAAA,IAAuB;MAAAA,0DAAA,EAAO;MAG1DA,4DAAA,eAA0C;MAGPA,oDAAA,qBAAa;MAAAA,0DAAA,EAAW;MACrDA,4DAAA,iBAAwB;MAAAA,oDAAA,sBAAc;MAAAA,0DAAA,EAAS;MAEjDA,4DAAA,eAAwB;MAAAA,oDAAA,IAAgC;MAAAA,0DAAA,EAAO;MAQjEA,uDAAA,SAAO;MACPA,4DAAA,cAA4B;MAEAA,oDAAA,sBAAc;MAAAA,0DAAA,EAAS;MAC/CA,4DAAA,eAAwB;MACtBA,oDAAA,IACF;MAAAA,0DAAA,EAAO;;;MAxFTA,uDAAA,GAAqB;MAArBA,+DAAA,CAAA2E,GAAA,CAAAqK,UAAA,CAAA7M,IAAA,CAAqB;MASKnC,uDAAA,IAAuB;MAAvBA,+DAAA,CAAA2E,GAAA,CAAAqK,UAAA,CAAAE,MAAA,CAAuB;MASvBlP,uDAAA,GAAwB;MAAxBA,+DAAA,CAAA2E,GAAA,CAAAqK,UAAA,CAAAG,OAAA,CAAwB;MASxBnP,uDAAA,GAAqB;MAArBA,+DAAA,CAAA2E,GAAA,CAAAqK,UAAA,CAAAI,IAAA,CAAqB;MAOrBpP,uDAAA,GAAyB;MAAzBA,+DAAA,CAAA2E,GAAA,CAAAqK,UAAA,CAAAK,QAAA,CAAyB;MAe3BrP,uDAAA,IAAwB;MAAxBA,+DAAA,CAAA2E,GAAA,CAAAqK,UAAA,CAAAM,OAAA,CAAwB;MAQxBtP,uDAAA,GAA8B;MAA9BA,gEAAA,KAAA2E,GAAA,CAAAqK,UAAA,CAAAO,YAAA,MAA8B;MAQ9BvP,uDAAA,GAAuB;MAAvBA,gEAAA,KAAA2E,GAAA,CAAAqK,UAAA,CAAAQ,KAAA,MAAuB;MASvBxP,uDAAA,GAAgC;MAAhCA,gEAAA,KAAA2E,GAAA,CAAAqK,UAAA,CAAAS,cAAA,MAAgC;MAapDzP,uDAAA,GACF;MADEA,gEAAA,MAAA2E,GAAA,CAAAqK,UAAA,CAAAU,WAAA,qBACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEtEQ1P,4DAAA,YAAkI;IACzCA,oDAAA,kBAAW;IAAAA,0DAAA,EAAI;;;;IAAlFA,uDAAA,GAAkE;IAAlEA,wDAAA,iCAAAgC,MAAA,CAAAgN,UAAA,CAAAjI,KAAA,kBAAkE;;;;;;;;IAExF/G,4DAAA,YAAqE;IACsCA,oDAAA,YAAK;IAAAA,0DAAA,EAAI;;;;IAA9FA,uDAAA,GAA0D;IAA1DA,wDAAA,eAAAA,6DAAA,IAAA6J,GAAA,EAAA+F,MAAA,CAAAZ,UAAA,CAAAjI,KAAA,EAA0D;;;;;;;;;ADlBpG,MAKahI,mBAAmB;EAG9B+D,YACUwD,KAAqB,EACrBqI,OAA0B,EAC1BpI,qBAA4C,EAC5CtE,qBAA4C;IAH5C,KAAAqE,KAAK,GAALA,KAAK;IACL,KAAAqI,OAAO,GAAPA,OAAO;IACP,KAAApI,qBAAqB,GAArBA,qBAAqB;IACrB,KAAAtE,qBAAqB,GAArBA,qBAAqB;EAC5B;EAEHwE,QAAQA,CAAA;IACN,MAAMM,KAAK,GAAG,IAAI,CAACT,KAAK,CAACsI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,OAAO,CAAE;IACxDpL,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEoD,KAAK,CAAC;IAC5B,IAAI,CAAC4H,OAAO,CAACI,wBAAwB,CAAChI,KAAK,CAAC,CAACvD,SAAS,CACpD4F,IAAI,IAAG;MACL,IAAI,CAAC4F,UAAU,GAAG5F,IAAI;MACtB1F,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACqL,UAAU,CAAC7M,IAAI,CAAC;MAC/C,IAAI,CAACoE,qBAAqB,CAACsJ,iBAAiB,CAAC,IAAI,CAACb,UAAU,CAAC;IAC/D,CAAC,CACF;EACH;;AApBWjQ,mBAAmB;mBAAnBA,mBAAmB,EAAAiB,+DAAA,CAAAF,2DAAA,GAAAE,+DAAA,CAAAkE,0EAAA,GAAAlE,+DAAA,CAAA6L,mFAAA,GAAA7L,+DAAA,CAAA8P,kFAAA;AAAA;AAAnB/Q,mBAAmB;QAAnBA,mBAAmB;EAAAqF,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAuL,6BAAArL,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZhC1E,4DAAA,WAAM;MAEFA,uDAAA,cAAsB;MAEtBA,4DAAA,WAAM;MACKA,oDAAA,GAAmB;MAAAA,0DAAA,EAAQ;MAClCA,uDAAA,cAAkN;MACtNA,0DAAA,EAAO;MACPA,4DAAA,WAAM;MACFA,uDAAA,aAAsE;MAEtEA,4DAAA,aAAuB;MAK8HA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAI;MAErJA,4DAAA,aAAqB;MACqFA,oDAAA,YAAI;MAAAA,0DAAA,EAAI;MAElHA,wDAAA,KAAAgQ,kCAAA,gBAEK;MACLhQ,wDAAA,KAAAiQ,kCAAA,gBAEK;MACPjQ,0DAAA,EAAK;MAGfA,uDAAA,qBAA+B;MACnCA,0DAAA,EAAO;;;MA1BIA,uDAAA,GAAmB;MAAnBA,+DAAA,CAAA2E,GAAA,CAAAqK,UAAA,CAAA7M,IAAA,CAAmB;MAIrBnC,uDAAA,GAAwB;MAAxBA,mEAAA,QAAA2E,GAAA,CAAAqK,UAAA,CAAAkB,KAAA,EAAAlQ,2DAAA,CAAwB;MAOgCA,uDAAA,GAA6D;MAA7DA,wDAAA,eAAAA,6DAAA,IAAAmQ,GAAA,EAAAxL,GAAA,CAAAqK,UAAA,CAAAjI,KAAA,EAA6D;MAGxF/G,uDAAA,GAAyD;MAAzDA,wDAAA,eAAAA,6DAAA,IAAAoQ,GAAA,EAAAzL,GAAA,CAAAqK,UAAA,CAAAjI,KAAA,EAAyD;MAEzD/G,uDAAA,GAA0G;MAA1GA,wDAAA,SAAA2E,GAAA,CAAA1C,qBAAA,CAAA+C,eAAA,MAAAL,GAAA,CAAA1C,qBAAA,CAAAC,QAAA,CAAAwK,YAAA,eAA0G;MAG1G1M,uDAAA,GAA6C;MAA7CA,wDAAA,SAAA2E,GAAA,CAAA1C,qBAAA,CAAA+C,eAAA,GAA6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBjD;AACD;;;;;;;;;;;;ICwB/BhF,4DAAA,cAA+F;IAE3FA,uDAAA,cAAsF;IACtFA,4DAAA,uBAAkB;IACOA,oDAAA,GAAqB;IAAAA,0DAAA,EAAK;IACjDA,4DAAA,cAAiD;IACLA,oDAAA,GAA+B;IAAAA,0DAAA,EAAI;IAC7EA,4DAAA,YAA0C;IAAAA,oDAAA,IAAiC;IAAAA,0DAAA,EAAI;IAEjFA,4DAAA,aAA8B;IAAAA,oDAAA,IAAmC;IAAAA,0DAAA,EAAI;IACrEA,4DAAA,kBAAyH;IAAAA,oDAAA,uBAAe;IAAAA,0DAAA,EAAS;;;;IAR7GA,uDAAA,GAAwB;IAAxBA,wDAAA,QAAAsQ,aAAA,CAAAJ,KAAA,EAAAlQ,2DAAA,CAAwB;IAErCA,uDAAA,GAAqB;IAArBA,+DAAA,CAAAsQ,aAAA,CAAAnO,IAAA,CAAqB;IAEAnC,uDAAA,GAA+B;IAA/BA,gEAAA,aAAAsQ,aAAA,CAAApB,MAAA,KAA+B;IAC/BlP,uDAAA,GAAiC;IAAjCA,gEAAA,cAAAsQ,aAAA,CAAAnB,OAAA,KAAiC;IAE/CnP,uDAAA,GAAmC;IAAnCA,gEAAA,eAAAsQ,aAAA,CAAAjB,QAAA,KAAmC;IAC9BrP,uDAAA,GAA6D;IAA7DA,wDAAA,eAAAA,6DAAA,IAAA6J,GAAA,EAAAyG,aAAA,CAAAvJ,KAAA,EAA6D;;;AD5B5G,MAKajI,oBAAoB;EAO/BgE,YAAoByN,iBAAoC;IAApC,KAAAA,iBAAiB,GAAjBA,iBAAiB;IAFrC,KAAAC,UAAU,GAAW,EAAE;EAEoC;EAE3D/J,QAAQA,CAAA;IACN,IAAI,CAAC8J,iBAAiB,CAACE,iBAAiB,EAAE,CAACjN,SAAS,CAAC4F,IAAI,IAAG;MAC1D,IAAI,CAACsH,iBAAiB,GAAGtH,IAAI;MAC7B,IAAI,CAACuH,WAAW,GAAG9H,wCAAE,CAACO,IAAI,CAACwH,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACvC,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACF,WAAW;IAC7C,CAAC,CAAC;EACJ;EAEAG,YAAYA,CAAA;IACV,IAAI,CAACH,WAAW,GAAG9H,wCAAE,CAAC,IAAI,CAAC6H,iBAAiB,CAAC;IAC7C,IAAI,CAACG,mBAAmB,GAAG,IAAI,CAACF,WAAW;EAC7C;EAEAI,iBAAiBA,CAAA;IACf,IAAI,IAAI,CAACP,UAAU,EAAE;MACnB;MACA,IAAI,CAACK,mBAAmB,GAAG,IAAI,CAACF,WAAW,CAACK,IAAI,CAC9CX,mDAAG,CAACM,WAAW,IAAIA,WAAW,CAACxF,MAAM,CAAC6D,UAAU,IAC9CA,UAAU,CAAC7M,IAAI,CAAC8O,WAAW,EAAE,CAAC5F,QAAQ,CAAC,IAAI,CAACmF,UAAU,CAACS,WAAW,EAAE,CAAC,IACrEjC,UAAU,CAACK,QAAQ,CAAC4B,WAAW,EAAE,CAAC5F,QAAQ,CAAC,IAAI,CAACmF,UAAU,CAACS,WAAW,EAAE,CAAC,CAC1E,CAAC,CACH;KACF,MAAM;MACL;MACA,IAAI,CAACJ,mBAAmB,GAAG,IAAI,CAACF,WAAW;;EAE/C;EAEAO,WAAWA,CAAA;IACT,IAAI,CAACV,UAAU,GAAG,EAAE;IACpB,IAAI,CAACO,iBAAiB,EAAE;EAC1B;;AAxCWjS,oBAAoB;mBAApBA,oBAAoB,EAAAkB,+DAAA,CAAAF,0EAAA;AAAA;AAApBhB,oBAAoB;QAApBA,oBAAoB;EAAAsF,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAA2M,8BAAAzM,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCbjC1E,4DAAA,WAAM;MAMkHA,wDAAA,2BAAAoR,6DAAA5P,MAAA;QAAA,OAAAmD,GAAA,CAAA6L,UAAA,GAAAhP,MAAA;MAAA,EAAwB,mBAAA6P,qDAAA;QAAA,OAAU1M,GAAA,CAAAoM,iBAAA,EAAmB;MAAA,EAA7B;MAAtI/Q,0DAAA,EAAqK;MACrKA,4DAAA,gBAA6F;MAAxBA,wDAAA,mBAAAsR,sDAAA;QAAA,OAAS3M,GAAA,CAAAuM,WAAA,EAAa;MAAA,EAAC;MAAClR,oDAAA,YAAK;MAAAA,0DAAA,EAAS;MAKhHA,4DAAA,aAAiC;MAEXA,oDAAA,4BAAoB;MAAAA,0DAAA,EAAK;MAE9CA,4DAAA,cAAoB;MACgBA,wDAAA,mBAAAuR,kDAAA;QAAA,OAAS5M,GAAA,CAAAmM,YAAA,EAAc;MAAA,EAAC;MAAC9Q,oDAAA,eAAO;MAAAA,0DAAA,EAAI;MAK1EA,uDAAA,cAAyB;MAGzBA,4DAAA,eAAwE;MACtEA,wDAAA,KAAAwR,oCAAA,mBAaM;;MACRxR,0DAAA,EAAM;;;MAlC8GA,uDAAA,GAAwB;MAAxBA,wDAAA,YAAA2E,GAAA,CAAA6L,UAAA,CAAwB;MAoB3ExQ,uDAAA,IAA8B;MAA9BA,wDAAA,YAAAA,yDAAA,QAAA2E,GAAA,CAAAkM,mBAAA,EAA8B;;;;;;;;;;;;;;;;;;;;;;;;ACvBtC;;;;AAK7D,MAGa5M,qBAAqB;EAQhCnB,YAAoB4O,IAAgB,EAAU3O,MAAc;IAAxC,KAAA2O,IAAI,GAAJA,IAAI;IAAsB,KAAA3O,MAAM,GAANA,MAAM;IAN5C,KAAA4O,UAAU,GAAG,KAAK;IACnB,KAAA5L,YAAY,GAAG,KAAK;IAI3B,KAAA6L,OAAO,GAAWH,0EAAmB;EAC0B;EAE/D;EACAI,gBAAgBA,CAACC,IAAa;IAC5B,IAAI,CAACH,UAAU,GAAGG,IAAI;EACxB;EAEA;EACA9L,eAAeA,CAAA;IACb,IAAI,CAAC0L,IAAI,CAAC5C,GAAG,CAAM,IAAI,CAAC8C,OAAO,GAAG,WAAW,CAAC,CAACpO,SAAS,CACrDC,QAAQ,IAAI;MACX,IAAIA,QAAQ,CAACsO,aAAa,KAAK,IAAI,EAAE;QACnC,IAAI,CAACJ,UAAU,GAAG,IAAI;QACtB,IAAI,CAACrO,IAAI,GAAGG,QAAQ,CAACH,IAAI;QACzB,IAAI,CAAC0O,eAAe,CAAC,IAAI,CAAC1O,IAAI,CAACC,MAAM,CAAC,CAACC,SAAS,CAC7C4F,IAAI,IAAI;UACP,IAAI,CAAClH,QAAQ,GAAGkH,IAAI;QACtB,CAAC,EACArF,KAAK,IAAI;UACRL,OAAO,CAACK,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAChC,CAAC,CACF;OACF,MAAM;QACL,IAAI,CAAC4N,UAAU,GAAG,KAAK;;IAE3B,CAAC,EACA5N,KAAK,IAAI;MACRL,OAAO,CAACK,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CACF;EACH;EAEA;EACAiO,eAAeA,CAACzO,MAAc;IAC5B,OAAO,IAAI,CAACmO,IAAI,CAAC5C,GAAG,CAAiB,IAAI,CAAC8C,OAAO,GAAG,OAAO,GAAGrO,MAAM,CAAC;EACvE;EAEA;EACAyB,eAAeA,CAAA;IACb,OAAO,IAAI,CAAC2M,UAAU;EACxB;EAEA;EACA1E,aAAaA,CAACgF,WAAgB;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACN,OAAO,GAAG,UAAU,GAAG,IAAI,CAACtO,IAAI,CAACC,MAAM,EAAE0O,WAAW,CAAC;EACjF;EAEA;EACArP,KAAKA,CAAA;IACH,IAAI,CAACmD,YAAY,GAAG,KAAK;IACzBnC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,cAAc;EACvC;EAEA;EACAhD,MAAMA,CAAA;IACJ,IAAI,CAAC6Q,UAAU,GAAG,KAAK;IACvB,IAAI,CAAC5L,YAAY,GAAG,IAAI;IACxBrC,OAAO,CAACC,GAAG,CAAC,gDAAgD,GAAG,IAAI,CAACiO,OAAO,CAAC;IAC5E,OAAO,IAAI,CAACF,IAAI,CAACS,IAAI,CAAE,IAAI,CAACP,OAAO,GAAG,QAAQ,EAAE,EAAE,CAAC;EACrD;;AAnEW3N,qBAAqB;mBAArBA,qBAAqB,EAAAjE,sDAAA,CAAAF,4DAAA,GAAAE,sDAAA,CAAAkE,mDAAA;AAAA;AAArBD,qBAAqB;SAArBA,qBAAqB;EAAAqO,OAAA,EAArBrO,qBAAqB,CAAAsO,IAAA;EAAAC,UAAA,EAFpB;AAAM;;;;;;;;;;;;;;;;;;ACNyC;;;AAG7D,MAGa/M,gBAAgB;EAG3B3C,YAAoB2P,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAb,OAAO,GAAUH,0EAAmB;EAEU;EAE9CtI,YAAYA,CAACpC,KAAa,EAAEmC,MAAc;IACxCxF,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,OAAO,IAAI,CAAC8O,UAAU,CAAC3D,GAAG,CAA4B,IAAI,CAAC8C,OAAO,GAAG,cAAc,GAAG7K,KAAK,GAAG,QAAQ,GAAGmC,MAAM,GAAG,QAAQ,CAAC;EAC7H;;AARWzD,gBAAgB;mBAAhBA,gBAAgB,EAAAzF,sDAAA,CAAAF,4DAAA;AAAA;AAAhB2F,gBAAgB;SAAhBA,gBAAgB;EAAA6M,OAAA,EAAhB7M,gBAAgB,CAAA8M,IAAA;EAAAC,UAAA,EAFf;AAAM;;;;;;;;;;;;;;;;;;ACJyC;;;AAE7D,MAGahN,WAAW;EAEtB1C,YAAoB2P,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAD9B,KAAAb,OAAO,GAAUH,0EAAmB;EACU;EAE9CzH,OAAOA,CAACjD,KAAa;IACnB,OAAO,IAAI,CAAC0L,UAAU,CAAC3D,GAAG,CAAuB,IAAI,CAAC8C,OAAO,GAAG,cAAc,GAAG7K,KAAK,GAAG,OAAO,CAAC;EACnG;;AANWvB,WAAW;mBAAXA,WAAW,EAAAxF,sDAAA,CAAAF,4DAAA;AAAA;AAAX0F,WAAW;SAAXA,WAAW;EAAA8M,OAAA,EAAX9M,WAAW,CAAA+M,IAAA;EAAAC,UAAA,EAFV;AAAM;;;;;;;;;;;;;;;;;;ACFuC;;;AAE3D,MAGa9M,YAAY;EAGvB5C,YAAoB2P,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAD9B,KAAAb,OAAO,GAAUH,6EAAmB;EACU;EAE9C/F,SAASA,CAACtC,IAAQ,EAAErC,KAAmB,EAAEmC,MAAoB;IAC3D,IAAIwJ,GAAG,GAAG,IAAI,CAACd,OAAO,GAAG,cAAc,GAAG7K,KAAK,GAAG,QAAQ,GAAGmC,MAAM,GAAG,cAAc;IACpFxF,OAAO,CAACC,GAAG,CAAC+O,GAAG,CAAC;IAChBhP,OAAO,CAACC,GAAG,CAACyF,IAAI,CAAC;IACjB,OAAO,IAAI,CAACqJ,UAAU,CAACN,IAAI,CAAMO,GAAG,EAAEtJ,IAAI,CAAC;EAC7C;;AAVW1D,YAAY;mBAAZA,YAAY,EAAA1F,sDAAA,CAAAF,4DAAA;AAAA;AAAZ4F,YAAY;SAAZA,YAAY;EAAA4M,OAAA,EAAZ5M,YAAY,CAAA6M,IAAA;EAAAC,UAAA,EAFX;AAAM;;;;;;;;;;;;;;;;;ACJpB,MAGahK,qBAAqB;EAGhC1F,YAAA;IAFiB,KAAA6P,oBAAoB,GAAG,gBAAgB;EAExC;EAEhB9C,iBAAiBA,CAACb,UAAmC;IACnD4D,YAAY,CAACC,OAAO,CAAC,IAAI,CAACF,oBAAoB,EAAE9L,IAAI,CAAC+E,SAAS,CAACoD,UAAU,CAAC,CAAC;EAC7E;EAEA/H,iBAAiBA,CAAA;IACf,MAAMD,cAAc,GAAG4L,YAAY,CAACE,OAAO,CAAC,IAAI,CAACH,oBAAoB,CAAC;IACtE,OAAO3L,cAAc,GAAGH,IAAI,CAACC,KAAK,CAACE,cAAc,CAAC,GAAG,IAAI;EAC3D;EAEA+L,mBAAmBA,CAAA;IACjBH,YAAY,CAACI,UAAU,CAAC,IAAI,CAACL,oBAAoB,CAAC;EACpD;;AAhBWnK,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAA8J,OAAA,EAArB9J,qBAAqB,CAAA+J,IAAA;EAAAC,UAAA,EAFpB;AAAM;;;;;;;;;;;;;;;;;;ACDyC;;;AAE7D,MAGalN,iBAAiB;EAG5BxC,YAAoB2P,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAb,OAAO,GAAUH,0EAAmB;EAEU;EAE9ChB,iBAAiBA,CAAA;IACf/M,OAAO,CAACC,GAAG,CAAC,IAAI,CAACiO,OAAO,CAAC;IACzB,OAAO,IAAI,CAACa,UAAU,CAAC3D,GAAG,CAA4B,IAAI,CAAC8C,OAAO,GAAG,aAAa,CAAC;EACrF;EAEA7C,wBAAwBA,CAACkE,EAAU;IACjC,OAAO,IAAI,CAACR,UAAU,CAAC3D,GAAG,CAA0B,IAAI,CAAC8C,OAAO,GAAG,cAAc,GAAGqB,EAAE,CAAC;EACzF;;AAZW3N,iBAAiB;mBAAjBA,iBAAiB,EAAAtF,sDAAA,CAAAF,4DAAA;AAAA;AAAjBwF,iBAAiB;SAAjBA,iBAAiB;EAAAgN,OAAA,EAAjBhN,iBAAiB,CAAAiN,IAAA;EAAAC,UAAA,EAFhB;AAAM;;;;;;;;;;;;;;;ACNb,MAAMf,WAAW,GAAG;EACvBG,OAAO,EAAE;CACZ;;;;;;;;;;;;;;ACA4C;AAG7CsB,sEAAA,EAAwB,CAACE,eAAe,CAACxN,sDAAS,CAAC,CAChDyN,KAAK,CAACC,GAAG,IAAI5P,OAAO,CAACK,KAAK,CAACuP,GAAG,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/invoice/invoice.component.ts","./src/app/invoice/invoice.component.html","./src/app/menu-items/menu-items.component.ts","./src/app/menu-items/menu-items.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/order-items/order-items.component.ts","./src/app/order-items/order-items.component.html","./src/app/order/order.component.ts","./src/app/order/order.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/restaurant-overview/restaurant-overview.component.ts","./src/app/restaurant-overview/restaurant-overview.component.html","./src/app/restaurant/restaurant.component.ts","./src/app/restaurant/restaurant.component.html","./src/app/restaurants/restaurants.component.ts","./src/app/restaurants/restaurants.component.html","./src/app/service/authentication.service.ts","./src/app/service/menu-items.service.ts","./src/app/service/menu.service.ts","./src/app/service/order.service.ts","./src/app/service/restaurant-data.service.ts","./src/app/service/restaurant.service.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { MenuItemsComponent } from './menu-items/menu-items.component';\nimport { RestaurantsComponent } from './restaurants/restaurants.component';\nimport { RestaurantComponent } from './restaurant/restaurant.component';\nimport { RestaurantOverviewComponent } from './restaurant-overview/restaurant-overview.component';\nimport { OrderComponent } from './order/order.component';\nimport { OrderItemsComponent } from './order-items/order-items.component';\nimport { InvoiceComponent } from './invoice/invoice.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n  { path: '',   redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent},\n  { path: 'restaurants', component: RestaurantsComponent},\n  { path: 'profile/:customerId', component: ProfileComponent}, \n  { \n    path: 'restaurants/:resId', \n    component: RestaurantComponent, \n    children: [\n      { \n        path: '', \n        redirectTo: 'overview', \n        pathMatch: 'full'\n      },\n      { \n        path: 'overview', \n        component: RestaurantOverviewComponent \n      },\n      { \n        path: 'menu', \n        component: MenuComponent, \n      },\n      {\n        path: 'menu/:menuId/items', \n        component: MenuItemsComponent,\n      },\n      {\n        path: 'order',\n        component: OrderComponent,\n      },\n      {\n        path: 'menu/:menuId/items/order',\n        component: OrderItemsComponent,\n      }\n    ]\n  },\n  { path: 'invoice', component: InvoiceComponent},\n];\n  \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthenticationService } from './service/authentication.service';\nimport { ICustomerModel } from './interfaces/ICustomerModelAngular';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'DineEasy'; \n  restaurantImage = '../assets/images/DineEasy.jpg';\n  profileData: ICustomerModel;\n  showProfileForm = false;\n  \n  showOptionsFlag: boolean = false;\n\n  constructor(public authenticationService: AuthenticationService, private router: Router) {\n  }\n \n  // Shows the dropdown options\n  showOptions() {\n    this.showOptionsFlag = true;\n  }\n\n  // Hides the dropdown options\n  hideOptions(event: MouseEvent) {\n    setTimeout(() => {\n      this.showOptionsFlag = false;\n    }, 3000);\n  }\n\n  // Toggles the show options flag to appear and disappear drop-down menu on mouse events\n  toggleOptions() {\n    this.showOptionsFlag = !this.showOptionsFlag;\n  }\n\n  // Redirects to the profile information if profile option selected\n  profile()\n  {\n    this.router.navigateByUrl('/profile/'+ this.authenticationService.user.userId);\n  }\n\n  // Invokes to login functionality provided by authentication service\n  login() {\n    this.authenticationService.login();\n  }\n\n  // Invokes the logout functionality provided by authentication service\n  logout() {\n    this.authenticationService.logout().subscribe((response) => {\n          console.log(response)\n          window.location.href = '/';\n        },\n        (error) => {\n          console.error('Error:', error);\n        }\n      );\n  }\n}\n","<html>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <head>\n        <title>DineEasy</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\n    </head>\n    <body>  \n      <nav class=\"navbar navbar-light bg-light\">\n        <div class=\"container-fluid\">\n          <a class=\"dine-easy\" href=\"#\">DineEasy</a>\n          <form class=\"d-flex align-items-start\"></form>\n          <div class=\"d-flex buttons\">\n            <ng-container *ngIf=\"authenticationService.isAuthenticated(); else loginBlock\">\n              <div class=\"dropdown\">\n                Welcome, {{authenticationService.customer.name}}\n                <img class=\"profile-pic\" src=\"{{authenticationService.customer.profilePic}}\" alt=\"Profile Picture\" (click)=\"toggleOptions()\" (mouseenter)=\"showOptions()\" (mouseleave)=\"hideOptions($event)\">\n                <div class=\"dropdown-content\" *ngIf=\"showOptionsFlag\">\n                  <button class=\"btn  my-button\" (click)=\"profile()\">Profile</button>\n                  <button class=\"btn  my-button\" (click)=\"logout()\">Logout</button>\n                </div>\n              </div>\n            </ng-container>\n            <ng-template #loginBlock>\n              <button class=\"btn  my-button\" (click)=\"login()\">Login</button>\n            </ng-template>\n          </div>\n        </div>\n      </nav>\n      <div class=\"content\">\n        <router-outlet></router-outlet>\n      </div>\n            <footer class=\"fixed-footer text-center text-lg-start section-spacing\" style=\"background-color: #ECCDB4;\">\n            <div class=\"container-fluid\">\n              <div class=\"text-black p-3\" style=\"background-color: rgba(0, 0, 0, 0.2);\">\n                © 2023 DineEasy.com. All rights reserved.\n              </div>\n            </div>\n          </footer>  \n        </body>\n</html> ","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { RestaurantService } from './service/restaurant.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MenuComponent } from './menu/menu.component';\nimport { MenuService } from './service/menu.service';\nimport { MenuItemsComponent } from './menu-items/menu-items.component';\nimport { MenuItemsService } from './service/menu-items.service';\nimport { OrderService } from './service/order.service';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RestaurantsComponent } from './restaurants/restaurants.component';\nimport { RestaurantComponent } from './restaurant/restaurant.component';\nimport { RestaurantOverviewComponent } from './restaurant-overview/restaurant-overview.component';\nimport { OrderComponent } from './order/order.component';\nimport { OrderItemsComponent } from './order-items/order-items.component';\nimport { InvoiceComponent } from './invoice/invoice.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MenuComponent,\n    MenuItemsComponent,\n    RestaurantsComponent,\n    RestaurantComponent,\n    RestaurantOverviewComponent,\n    OrderComponent,\n    OrderItemsComponent,\n    InvoiceComponent,\n    ProfileComponent,\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatIconModule\n  ],\n  providers: [RestaurantService, MenuService, MenuItemsService, OrderService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { Observable, of } from 'rxjs';\nimport { IUserModel } from '../interfaces/IUserModelAngular';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent{\n\n  constructor(private authenticationService: AuthenticationService, private router:Router) {\n    if(!this.authenticationService.isLoggingOut)\n      this.authenticationService.checkAuthStatus();\n  }\n}\n","<img src=\"../assets/images/DineEasy.jpg\" class=\"custom-image\" alt=\"Dineasy Logo\">\n<app-restaurants></app-restaurants>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RestaurantDataService } from '../service/restaurant-data.service';\n\n@Component({\n  selector: 'app-invoice',\n  templateUrl: './invoice.component.html',\n  styleUrls: ['./invoice.component.css']\n})\nexport class InvoiceComponent {\n  selectedItems: any = [];\n  restaurantName: String;\n  restaurantLocation: String;\n  resId: String;\n  \n  constructor(private route: ActivatedRoute, \n      private restaurantDataService: RestaurantDataService,\n      private router: Router) {}\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      const invoiceItems = JSON.parse(params['items']);\n      this.resId = params['resId'];\n      this.selectedItems = invoiceItems;\n      const restaurantData = this.restaurantDataService.getRestaurantData();\n      if (restaurantData) {\n        this.restaurantName = restaurantData.name;\n        this.restaurantLocation = restaurantData.location;\n      }\n    });\n  }\n  \n\n  generateInvoiceContent(): string {\n    let invoiceContent = 'Invoice\\n\\n';\n  \n    invoiceContent += `${this.restaurantName}\\n`;\n    invoiceContent += `${this.restaurantLocation}\\n\\n`;\n    invoiceContent += '------------------------\\n\\n';\n  \n    invoiceContent += 'Selected Items:\\n';\n    for (const item of this.selectedItems) {\n      invoiceContent += `- ${item.name} - ${item.price}\\n`;\n    }\n  \n    invoiceContent += '\\nTotal: ' + this.calculateTotal();\n    return invoiceContent;\n  }\n  \n  \n  \n  downloadInvoice() {\n    const invoiceContent = this.generateInvoiceContent();\n    const blob = new Blob([invoiceContent], { type: 'text/plain' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'invoice.txt';\n    link.click();\n  }\n  \n  calculateTotal(): number {\n    return this.selectedItems.reduce((total: any, item: { price: any; }) => total + item.price, 0);\n  }\n  \n  goBack() {\n    this.router.navigate(['/restaurants', this.resId]);\n  }\n  \n}","<div class=\"invoice\">\n    <h2>Invoice</h2>\n    <h2>{{restaurantName}}</h2>\n    <h6>{{restaurantLocation}}</h6>\n    <p class=\"line-section\"></p>\n    <div class=\"item-list\">\n      <div *ngFor=\"let item of selectedItems\" class=\"item\">\n        <div class=\"item-name\">{{ item.name }}</div>\n        <div class=\"item-price\">{{ item.price | currency }}</div>\n      </div>\n    </div>\n    <div class=\"total\">Total: {{ calculateTotal() | currency }}</div>\n    <div class=\"download-button\">\n      <button (click)=\"downloadInvoice()\">Download Invoice</button>\n    </div>\n  </div>\n  <button (click)=\"goBack()\" class=\"back-button\"> Go Back</button>\n  \n  ","import { Component, Input } from '@angular/core';\nimport IMenuItemsModelAngular from '../interfaces/IMenuItemsModelAngular';\nimport { Observable, of } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { MenuItemsService }  from '../service/menu-items.service'\n\n@Component({\n  selector: 'app-menu-items',\n  templateUrl: './menu-items.component.html',\n  styleUrls: ['./menu-items.component.css'],\n  providers: [MenuItemsService]\n})\nexport class MenuItemsComponent {\n  menuItems: Observable<IMenuItemsModelAngular[]>;\n  resId: string | null = null;\n  constructor(\n    private menuItemsService$: MenuItemsService, \n    private route: ActivatedRoute\n  ) {}\n  \n  ngOnInit():void {\n\n    // Get resId param from parent component [Menu]\n    this.route.parent?.params.subscribe(params => {\n      this.resId = params['resId'];\n    });\n\n    this.route.params.subscribe(params => {\n\n      // Get the menuId param from the current route\n      const menuId = params['menuId'];\n\n      // Request menu items for that restaurant using the menu items service\n      if(this.resId && menuId)\n      {\n        this.menuItemsService$.getMenuItems(this.resId, menuId).subscribe((data: IMenuItemsModelAngular[]) => {\n          this.menuItems = of(data);\n        });\n      }\n    });\n\n   }\n}\n\n","<html>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <head>\n        <title>Menu</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\n    </head>\n    <body> \n      <header>\n        <app-menu></app-menu>\n      </header>\n      <div class=\"container\">\n        <div class=\"row section-spacing\">\n          <div class=\"col-md-11\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>Category</th>\n                  <th>Name</th>\n                  <th>Price</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let menuItem of (menuItems | async)?.[0]?.menu\">\n                  <td>{{ menuItem.category }}</td>\n                  <td>{{ menuItem.name }}</td>\n                  <td>{{ menuItem.price }}</td>\n                </tr>\n              </tbody>\n            </table>\n            <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>>\n  </body>  \n</html>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport IMenuModelAngular from '../interfaces/IMenuModelAngular';\nimport { MenuService } from '../service/menu.service';\nimport { Observable, of} from 'rxjs';\nimport { MenuItemsService } from '../service/menu-items.service';\nimport IMenuItemsModelAngular from '../interfaces/IMenuItemsModelAngular';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css'],\n  providers: [MenuService, MenuItemsService]\n})\n\nexport class MenuComponent implements OnInit {\n  menu: Observable<IMenuModelAngular[]>;\n  menuItems:  Observable<IMenuItemsModelAngular[]>;\n  resId: string | null = null;\n  constructor(\n    private menuService$: MenuService, \n    private route: ActivatedRoute \n  ) {}\n  \n  ngOnInit():void { \n    \n    // Request menu for a restaurant through the menu service\n      this.route.parent?.params.subscribe(params => {\n        this.resId = params['resId'];\n        console.log(\"resID--\",this.resId)\n        if (this.resId) {\n          this.menuService$.getMenu(this.resId).subscribe((data: IMenuModelAngular[]) => {\n            this.menu = of(data);\n          });\n        }\n      });\n  }\n    \n}\n","<html>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <head>\n        <title>Menu</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\n    </head>\n    <body> \n      <div class=\"container\">\n        <div class=\"row section-spacing\">\n          <div class=\"col-md-11\">\n            <header>\n              <ul class=\"nav nav-tabs\">\n                <li class=\"nav-item\" *ngFor=\"let menu of menu | async\">\n                  <a class=\"nav-link\"\n                     [routerLink]=\"['/restaurants', resId, 'menu', menu.menuId, 'items']\"\n                     routerLinkActive=\"active\"\n                     queryParamsHandling=\"preserve\">\n                    {{ menu.name }}\n                  </a>\n                </li>\n              </ul>\n            </header>\n            <router-outlet></router-outlet>\n          </div>\n        </div>\n      </div>\n  </body>  \n</html>","import { Component, NgModule } from '@angular/core';\nimport { MenuItemsService }  from '../service/menu-items.service';\nimport IMenuItemsModelAngular from '../interfaces/IMenuItemsModelAngular';\nimport { Observable, of } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrderService } from '../service/order.service';\nimport { IOrderModel } from '../interfaces/IOrderModelAngular';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-order-items',\n  templateUrl: './order-items.component.html',\n  styleUrls: ['./order-items.component.css'],\n  providers: [MenuItemsService, OrderService]\n})\n\nexport class OrderItemsComponent {\n  menuItems: Observable<IMenuItemsModelAngular[]>\n  menuId: string;\n  resId: string | null;\n  quantity: Number;\n  itemIds: String[];\n  selectedItems: any[] = [];\n  invoiceItems: any[] = [];\n  itemsSubmitted: boolean = false;\n\n  constructor(\n    private menuItemsService$: MenuItemsService, \n    private OrderService$: OrderService,\n    private route: ActivatedRoute,\n    private router: Router  \n  ) {};\n\n  ngOnInit(): void {\n    // empty the selected items\n    this.itemIds = [];\n    this.selectedItems = [];\n    // Get resId param from parent component [Menu]\n    this.route.parent?.params.subscribe(params => {\n      this.resId = params['resId'];\n    });\n\n    this.route.params.subscribe(params => {\n      // Get the menuId param from the current route\n      this.menuId = params['menuId'];\n\n      // Request menu items for that restaurant using the menu items service\n      if(this.resId && this.menuId) {\n        this.menuItemsService$.getMenuItems(this.resId, this.menuId).subscribe((data: IMenuItemsModelAngular[]) => {\n          this.menuItems = of(data);\n        });\n      }\n    });\n  }\n\n  toggleSelection(itemId: String, price: number, name: String): void {\n    if (this.isSelected(itemId)) {\n      this.selectedItems = this.selectedItems.filter(item => item !== itemId);\n      this.invoiceItems = this.invoiceItems.filter(item => item.itemId !== itemId);\n      console.log(\"deselect the item from the invoiceItems array\", this.invoiceItems )\n      console.log(\"deselect the item from the array to selectedItems\", this.selectedItems )\n    } else {\n      this.selectedItems.push(itemId);\n      this.invoiceItems.push({ itemId, name, price });\n      console.log(\"successfully added the items to invoiceItems\", this.invoiceItems)\n      console.log(\"successfully added the items to selectedItems\", this.selectedItems)\n    }\n  }\n\n  // check if the item contains in the selected.\n  isSelected(itemId: any): boolean {\n    return this.selectedItems.includes(itemId);\n  }\n\n  sendOrder(): void {\n    if (this.selectedItems.length === 0) {\n      alert(\"Please select at least one item\");\n      return;\n    }\n\n    this.itemIds = this.selectedItems;\n    // calculate quantity\n    this.quantity = this.itemIds.length;\n\n    let data = {\n      \"customerId\": \"asdasdasd\",\n      quantity: this.quantity,\n      itemIds: this.itemIds,\n    }\n    console.log(data);\n    this.OrderService$.postOrder(data, this.resId, this.menuId).subscribe(response => {\n      console.log(response);\n      this.itemsSubmitted = true; \n    });\n  }\n\n  generateInvoice(): void {\n    if (this.invoiceItems.length === 0) {\n      console.log('No items selected for the invoice');\n      return;\n    }\n\n    console.log('Generating invoice...', this.invoiceItems);\n    this.router.navigate(['/invoice'], { queryParams: { items: JSON.stringify(this.invoiceItems), resId: this.resId } });\n  }\n}","<header>\n  <app-order></app-order>\n</header>\n<div class=\"container\">\n  <div class=\"row section-spacing\">\n    <div class=\"col-md-11\">\n      <form (submit)=\"sendOrder()\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th>Select</th>\n                <th>Category</th>\n                <th>Name</th>\n                <th>Price</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let menuItem of (menuItems | async)?.[0]?.menu\">\n                <td>\n                  <label>\n                    <input type=\"checkbox\" name=\"menuItem\" [value]=\"menuItem?.itemId\" (change) = \"toggleSelection(menuItem.itemId, menuItem.price, menuItem.name)\" [checked] = \"isSelected(menuItem.itemId)\"/>\n                  </label>\n                </td>\n                <td>{{ menuItem.category}}</td>\n                <td>{{ menuItem.name}}</td>\n                <td>{{ menuItem.price}}</td>\n              </tr>\n            </tbody>\n          </table>\n          <button type=\"submit\" class=\"button generate-invoice-button\" onclick=\"sendOrder()\">Submit</button>\n        </form>\n        <div class=\"invoice-button\" *ngIf=\"itemsSubmitted\">\n          <button class=\"button generate-invoice-button\" (click)=\"generateInvoice()\">Generate Invoice</button>\n        </div>\n      <router-outlet></router-outlet> \n  </div>\n</div>\n</div>","import { Component } from '@angular/core';\nimport { MenuItemsService }  from '../service/menu-items.service'\nimport { OrderService } from '../service/order.service';\nimport { MenuComponent } from '../menu/menu.component';\nimport { Observable, of } from 'rxjs';\nimport IMenuItemsModelAngular from '../interfaces/IMenuItemsModelAngular';\nimport { ActivatedRoute } from '@angular/router';\nimport IMenuModelAngular from '../interfaces/IMenuModelAngular';\nimport { MenuService } from '../service/menu.service';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css'],\n  providers: [OrderService, MenuService],\n})\nexport class OrderComponent {\n  menu: Observable<IMenuModelAngular[]>;\n  resId: string | null = null;\n  constructor(\n    private menuService$: MenuService, \n    private route: ActivatedRoute \n  ){}\n  ngOnInit():void { \n    \n    // Request menu for a restaurant through the menu service\n      this.route.parent?.params.subscribe(params => {\n        this.resId = params['resId'];\n        if (this.resId) {\n          this.menuService$.getMenu(this.resId).subscribe((data: IMenuModelAngular[]) => {\n            this.menu = of(data);\n          });\n        }\n      });\n  }\n}\n","<html>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <head>\n        <title>Menu</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\n    </head>\n    <body> \n      <div class=\"container\">\n        <div class=\"row section-spacing\">\n          <div class=\"col-md-11\">\n            <header>\n              <ul class=\"nav nav-tabs\">\n                <li class=\"nav-item\" *ngFor=\"let menu of menu | async\">\n                  <a class=\"nav-link\"\n                    [routerLink]=\"['/restaurants', resId, 'menu', menu.menuId, 'items', 'order']\"\n                    routerLinkActive=\"active\"\n                    queryParamsHandling=\"preserve\">\n                    {{ menu.name }}\n                  </a>\n                </li>\n              </ul>\n            </header>\n            <router-outlet></router-outlet>\n          </div>\n        </div>\n      </div>\n  </body>  \n</html>","import { Component } from '@angular/core';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { ICustomerModel } from '../interfaces/ICustomerModelAngular';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent {\n\n  authenticated:any;\n  customerInfo: any = {};\n  isEditable: { [key: string]: boolean } = {};\n\n  constructor(private authenticationService: AuthenticationService, private router: Router) {\n    this.initializeCustomerInfo();\n  }\n\n  // Initalizes the default customer information to be shown on the form\n  initializeCustomerInfo() {\n    const customer = this.authenticationService.customer;\n\n    this.customerInfo = {\n      name: customer.name,\n      profilePic: customer.profilePic,\n      email: customer.email,\n      contactNumber: customer.contactNumber,\n      address: customer.address,\n      customerType: customer.customerType,\n    };\n  }\n\n  // Checks if the same email is provided as user who is logged-in\n  isEmailSameAsRegisteredUser()\n  {\n    return (this.customerInfo.email === this.authenticationService.user.email);\n  }\n\n  // Toggles the edit flags to switch between read-only and edit mode.\n  toggleEdit(field:string, editMode: boolean): void {\n    this.isEditable[field] = editMode;\n  }\n\n  // Exit edit mode when click anywhere outside text boxes\n  exitEditMode()\n  {\n    for (const field in this.isEditable) {\n      this.isEditable[field] = false;\n    }\n  }\n\n  // Saves the profile if any change is made\n  SaveProfile()\n  {\n    if(this.customerInfo === this.authenticationService.customer)\n    {\n      console.log('No change in the profile');\n      this.router.navigateByUrl('/');\n    }\n    else\n    {\n      this.authenticationService.updateProfile(this.customerInfo).subscribe(\n        (response: any) => {\n          console.log('Profile updated successfully');\n          this.router.navigateByUrl('/');\n        },\n        (error: any) => {\n          console.error('Error updating profile:', error);\n        }\n      )\n    }\n    \n  }\n\n  CloseProfile()\n  {\n    this.router.navigateByUrl('/');\n  }\n\n  \n}\n","<html>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <head>\n        <title>Profile</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\n    </head>\n    <body> \n      <div class=\"profile-container\">\n        <div class=\"profile-form\" (click)=\"exitEditMode()\">\n          <div class=\"form-group\">\n            <label for=\"profilePic\">Profile Picture</label>\n            <div class=\"input-group\">\n              <img class=\"profile-picture\" src=\"{{customerInfo.profilePic}}\" alt=\"Profile Picture\">\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <div class=\"input-group\">\n              <input id=\"name\" class=\"form-control rounded\" type=\"text\" [(ngModel)]=\"customerInfo.name\" [readonly]=\"!isEditable['name']\" [autofocus]=\"isEditable\" (click)=\"$event.stopPropagation()\"  (blur)=\"toggleEdit('name', false)\" required>\n              <i class=\"edit-icon\" (click)=\"toggleEdit('name', true); $event.stopPropagation() \">&#9998;</i>\n            </div>\n          </div>\n          <div class=\"form-group form-group-row\">\n            <div class=\"form-group-item\">\n              <label for=\"email\">Email ID: </label>\n              <div class=\"input-group\">\n                <input id =\"email\" class=\"form-control rounded\" type=\"email\" [(ngModel)]=\"customerInfo.email\" [readonly]=\"!isEditable['email']\" (click)=\"$event.stopPropagation()\" (blur)=\"toggleEdit('email', false)\" required>\n                <i class=\"edit-icon\" (click)=\"toggleEdit('email', true); $event.stopPropagation();\">&#9998;</i>\n              </div>\n                <div class=\"email-error\" *ngIf=\"!isEmailSameAsRegisteredUser()\">\n                  Provided email does not match with registered email.\n              </div>\n            </div>\n            <div class=\"form-group-item\">\n              <label for=\"phone\">Phone: </label>\n              <div class=\"input-group\">\n                <input id=\"phone\" class=\"form-control rounded\" type=\"tel\" [(ngModel)]=\"customerInfo.contactNumber\" [readonly]=\"!isEditable['phone']\" (click)=\"$event.stopPropagation()\"  (blur)=\"toggleEdit('phone', false)\">\n                <i class=\"edit-icon\" (click)=\"toggleEdit('phone', true); $event.stopPropagation()\">&#9998;</i>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"address\">Address:</label>\n            <div class=\"input-group\">\n              <input id=\"address\" class=\"form-control rounded\" type=\"text\" [(ngModel)]=\"customerInfo.address\" [readonly]=\"!isEditable['address']\" (click)=\"$event.stopPropagation()\" (blur)=\"toggleEdit('address', false)\">\n              <i class=\"edit-icon\" (click)=\"toggleEdit('address', true); $event.stopPropagation()\">&#9998;</i>\n            </div>\n          </div>\n          <div id=\"customerType\" class=\"form-group\">\n            <label for=\"customerType\">Want to be Premium member?</label>\n            <select class=\"form-control rounded\" [(ngModel)]=\"customerInfo.customerType\" (click)=\"$event.stopPropagation()\" required>\n              <option value=\"Freemium\">Freemium</option>\n              <option value=\"Premium\">Premium</option>\n            </select>\n          </div>\n          <div class=\"table-button\">\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"SaveProfile(); $event.stopPropagation()\">Save Profile</button>\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"CloseProfile();  $event.stopPropagation()\">Cancel</button>\n          </div>\n        </div>\n      </div>\n        <router-outlet></router-outlet>\n    </body>\n</html>\n","import { Component } from '@angular/core';\nimport IRestaurantModelAngular from '../interfaces/IRestaurantModelAngular';\nimport { RestaurantService } from '../service/restaurant.service';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n\n@Component({\n  selector: 'app-restaurant-overview',\n  templateUrl: './restaurant-overview.component.html',\n  styleUrls: ['./restaurant-overview.component.css']\n})\nexport class RestaurantOverviewComponent {\n    restaurant: IRestaurantModelAngular;\n  \n    constructor(\n      private route: ActivatedRoute,\n      private service: RestaurantService\n    ) {}\n  \n    ngOnInit() { \n      const resId = this.route.parent?.snapshot.paramMap.get('resId')!;\n      console.log(\"resId \", resId);\n      this.service.getRestaurantDetailsById(resId).subscribe(\n        data => {\n          this.restaurant = data\n          console.log(\"restaurant\", this.restaurant.name)\n        }\n      );\n    }\n}\n","<div class=\"container\">\n  <div class=\"row section-spacing\">\n    <div class=\"col-md-11\">\n      <h2>{{ restaurant.name }}</h2>\n      <br />\n      <div class=\"row\">\n        <div class=\"col-md-3\">\n          <div class=\"icon-container\">\n            <div class=\"icon-info\">\n              <mat-icon class=\"icon-yellow\">star</mat-icon>\n              <strong class=\"heading\">Ratings:</strong>\n            </div>\n            <span class=\"info-text\">{{ restaurant.rating }}</span>\n          </div>\n        </div>\n        <div class=\"col-md-3\">\n          <div class=\"icon-container\">\n            <div class=\"icon-info\">\n              <mat-icon class=\"icon-grey\">comment</mat-icon>\n              <strong class=\"heading\">Review:</strong>\n            </div>\n            <span class=\"info-text\">{{ restaurant.reviews }}</span>\n          </div>\n        </div>\n        <div class=\"col-md-3\">\n          <div class=\"icon-container\">\n            <div class=\"icon-info\">\n              <mat-icon class=\"icon-green\">attach_money</mat-icon>\n              <strong class=\"heading\">Cost:</strong>\n            </div>\n            <span class=\"info-text\">{{ restaurant.cost }}</span>\n          </div>\n        </div>\n       \n        <div class=\"col-md-3\">\n          <div class=\"icon-container\">\n              <strong class=\"heading\">Cuisine:</strong>\n            <span class=\"info-text\">{{ restaurant.cuisines }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <br />\n    <div class=\"row line-section section-spacing shadow-box\">\n      <h3>About</h3>\n      <div class=\"col-md-6\">\n        <p></p>\n        <div class=\"icon-container\">\n          <div class=\"icon-info\">\n            <mat-icon class=\"icon-blue\">phone</mat-icon>\n            <strong class=\"heading\">Contact:</strong>\n          </div>\n          <span class=\"info-text\">{{ restaurant.contact }}</span>\n        </div>\n        <p></p>\n        <div class=\"icon-container\">\n          <div class=\"icon-info\">\n            <mat-icon class=\"icon-grey\">location_city</mat-icon>\n            <strong class=\"heading\">Neighborhood:</strong>\n          </div>\n          <span class=\"info-text\">{{ restaurant.neighborhood }} </span>\n        </div>\n        <p></p>\n        <div class=\"icon-container\">\n          <div class=\"icon-info\">\n            <mat-icon class=\"icon-grey\">schedule</mat-icon>\n            <strong class=\"heading\">Hours:</strong>\n          </div>\n          <span class=\"info-text\">{{ restaurant.hours }} </span>\n        </div>\n      </div>\n      <div class=\"col-md-6 justify-content-end\">\n        <div class=\"icon-container\">\n          <div class=\"icon-info\">\n            <mat-icon class=\"icon-green\">local_parking</mat-icon>\n            <strong class=\"heading\">Parking Info: </strong>\n          </div>\n          <span class=\"info-text\">{{ restaurant.parkingdetails }} </span>\n        </div>\n        <!-- <div class=\"icon-info\">\n          <mat-icon class=\"icon-green\">local_parking</mat-icon>\n          <strong class=\"heading\">Parking Details: </strong>\n        </div>\n          {{ restaurant.parkingdetails }} -->\n\n        <p></p>\n        <div class=\"icon-container\">\n          <div class=\"icon-info\">\n            <strong class=\"heading\">Valet Parking:</strong>\n            <span class=\"info-text\">\n              {{ restaurant.isValetPark ? \"Yes\" : \"No\" }}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport IRestaurantModelAngular from '../interfaces/IRestaurantModelAngular';\nimport { RestaurantService } from '../service/restaurant.service';\nimport { RestaurantDataService } from '../service/restaurant-data.service';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-restaurant',\n  templateUrl: './restaurant.component.html',\n  styleUrls: ['./restaurant.component.css']\n})\nexport class RestaurantComponent {\n  restaurant: IRestaurantModelAngular;\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: RestaurantService,\n    private restaurantDataService: RestaurantDataService,\n    public  authenticationService: AuthenticationService\n  ) {}\n\n  ngOnInit() {\n    const resId = this.route.snapshot.paramMap.get('resId')!;\n    console.log(\"resId \", resId);\n    this.service.getRestaurantDetailsById(resId).subscribe(\n      data => {\n        this.restaurant = data\n        console.log(\"restaurant\", this.restaurant.name)\n        this.restaurantDataService.setRestaurantData(this.restaurant);\n      }\n    );\n  }\n}\n","<html>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <head>\n        <title>{{restaurant.name}}</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\n    </head>\n    <body> \n        <img src={{restaurant.image}} class=\"custom-image\" alt=\"Dineasy Logo\">\n        \n        <div class=\"container\">\n                <!-- Replace the below code with your carousel implementation --> \n                <header>\n                <ul class=\"nav nav-tabs\">\n                    <li class=\"nav-item\">\n                      <a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['/restaurants', restaurant.resId, 'overview']\" routerLinkActive=\"active\">OverView</a>\n                    </li>\n                    <li class=\"nav-item\">\n                      <a class=\"nav-link\" [routerLink]=\"['/restaurants', restaurant.resId, 'menu']\" routerLinkActive=\"active\">Menu</a>\n                    </li>\n                    <li class=\"nav-item\" *ngIf=\"authenticationService.isAuthenticated() && authenticationService.customer.customerType === 'Premium'\">\n                      <a class=\"nav-link\" [routerLink]=\"'/restaurants/' + restaurant.resId + '/reservation'\">Reservation</a>\n                    </li>\n                    <li class=\"nav-item\" *ngIf=\"authenticationService.isAuthenticated()\">\n                      <a class=\"nav-link\" [routerLink]=\"['/restaurants', restaurant.resId, 'order']\" routerLinkActive=\"active\">Order</a>\n                    </li>\n                  </ul>\n            </header>\n          </div>\n        <router-outlet></router-outlet>\n    </body>\n</html>","import { Component } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport IRestaurantModelAngular from '../interfaces/IRestaurantModelAngular';\nimport { RestaurantService } from '../service/restaurant.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-restaurants',\n  templateUrl: './restaurants.component.html',\n  styleUrls: ['./restaurants.component.css']\n})\nexport class RestaurantsComponent {\n  resId: string;\n  restaurants: Observable<IRestaurantModelAngular[]>;\n  showAllRestaurant: IRestaurantModelAngular[];\n  filteredRestaurants: Observable<IRestaurantModelAngular[]>;\n  searchTerm: string = '';\n\n  constructor(private restaurantService: RestaurantService) {}\n\n  ngOnInit() {\n    this.restaurantService.getAllRestaurants().subscribe(data => {\n      this.showAllRestaurant = data;\n      this.restaurants = of(data.slice(0, 4));\n      this.filteredRestaurants = this.restaurants;\n    });\n  }\n\n  showAllCards() {\n    this.restaurants = of(this.showAllRestaurant);\n    this.filteredRestaurants = this.restaurants;\n  }\n\n  filterRestaurants() {\n    if (this.searchTerm) {\n      // Filter restaurants based on the search term\n      this.filteredRestaurants = this.restaurants.pipe(\n        map(restaurants => restaurants.filter(restaurant =>\n          restaurant.name.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n          restaurant.cuisines.toLowerCase().includes(this.searchTerm.toLowerCase())\n        ))\n      );\n    } else {\n      // If the search term is empty, show all restaurants\n      this.filteredRestaurants = this.restaurants;\n    }\n  }\n\n  clearSearch() {\n    this.searchTerm = '';\n    this.filterRestaurants();\n  }\n}\n","<body>\n  <div class=\"container\">\n    <!-- Search input field -->\n    <div class=\"row section-spacing\">\n      <div class=\"col-md-6\">\n        <div class=\"input-group\">\n          <input class=\"form-control search-input\" type=\"text\" placeholder=\"Search your favorite Restaurant or Cuisine\" [(ngModel)]=\"searchTerm\" (input)=\"filterRestaurants()\">\n          <button class=\"btn btn-outline-secondary clear-button\" type=\"button\" (click)=\"clearSearch()\">CLEAR</button>\n        </div>\n      </div>\n    </div>\n     <!-- Restaurants section -->\n     <div class=\"row section-spacing\">\n      <div class=\"col-md-11\">\n        <h2 class=\"dining\">Available For Dining</h2>\n      </div>\n      <div class=\"col-md\">\n        <a class=\"btn btn-link my-button\" (click)=\"showAllCards()\">See All</a>\n      </div>\n    </div>\n    \n\n    <hr class=\"line-section\">\n\n    <!-- Filtered restaurants list -->\n    <div class=\"row justify-content-start d-flex flex-wrap section-spacing\">\n      <div class=\"col-sm-6 col-md-4 col-lg-3\" *ngFor=\"let restaurant of filteredRestaurants | async\">\n        <mat-card class=\"card h-100\">\n          <img mat-card-image class=\"img-width\" [src]=\"restaurant.image\" alt=\"Restaurant Image\">\n          <mat-card-content>\n            <h5 class=\"card-title\">{{ restaurant.name }}</h5>\n            <div class=\"d-flex justify-content-between mb-2\">\n              <p class=\"small-text text-secondary info\">Rating: {{ restaurant.rating }}</p>\n              <p class=\"small-text text-secondary info\">Reviews: {{ restaurant.reviews }}</p>\n            </div>\n            <p class=\"text-truncate info\">Cuisines: {{ restaurant.cuisines }}</p>\n            <button mat-button color=\"primary\" [routerLink]=\"['/restaurants', restaurant.resId, 'overview']\" class=\"view-restaurant\">View Restaurant</button>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</body>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IUserModel } from '../interfaces/IUserModelAngular';\nimport { environment } from '../../environments/environment';\nimport { ICustomerModel } from '../interfaces/ICustomerModelAngular';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  \n  private isLoggedIn = false;\n  public isLoggingOut = false;\n  public user: IUserModel;\n  public customer: ICustomerModel;\n  name: String;\n  hostUrl: String = environment.hostUrl;\n  constructor(private http: HttpClient, private router: Router) {}\n\n  // Used to set the isLoggenIn flag\n  setAuthenticated(flag: boolean): void {\n    this.isLoggedIn = flag;\n  }\n\n  // Checks if the current user is authenticated and retrieves the users information\n  checkAuthStatus() {\n    this.http.get<any>(this.hostUrl + 'checkAuth').subscribe(\n      (response) => {\n        if (response.authenticated === true) {\n          this.isLoggedIn = true;\n          this.user = response.user;\n          this.getCustomerInfo(this.user.userId).subscribe(\n            (data) => {\n              this.customer = data;\n            },\n            (error) => {\n              console.error('Error:', error);\n            }\n          );\n        } else {\n          this.isLoggedIn = false;\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n  \n  // Gets the customer information\n  getCustomerInfo(userId: String) {\n    return this.http.get<ICustomerModel>(this.hostUrl + 'user/' + userId);\n  }\n  \n  // Checks where the current user is logged-in\n  isAuthenticated(): boolean {\n    return this.isLoggedIn;\n  }\n\n  // Updated the customer profile\n  updateProfile(profileData: any) {\n    return this.http.put(this.hostUrl + 'profile/' + this.user.userId, profileData);\n  }\n\n  // Redirect to Google OAuth callback API for login\n  login() {\n    this.isLoggingOut = false;\n    window.location.href = '/auth/google';\n  }\n\n  // Invoke the logout API to destroy the current session\n  logout(): Observable<any>  {\n    this.isLoggedIn = false;\n    this.isLoggingOut = true;\n    console.log(\"Calling logout in Authentication Service URL: \" + this.hostUrl)\n    return this.http.post( this.hostUrl + 'logout', {});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport IMenuItemsModelAngular from '../interfaces/IMenuItemsModelAngular';\nimport { environment } from '../../environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuItemsService {\n  hostUrl:string = environment.hostUrl;\n  \n  constructor(private httpClient: HttpClient) { }\n  \n  getMenuItems(resId: string, menuId: string) {\n    console.log(\"Here\")\n    return this.httpClient.get<IMenuItemsModelAngular[]>( this.hostUrl + 'restaurants/' + resId + '/menu/' + menuId + '/items');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport IMenuModelAngular from '../interfaces/IMenuModelAngular';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n  hostUrl:string = environment.hostUrl;\n  constructor(private httpClient: HttpClient) { }\n  \n  getMenu(resId: string) {\n    return this.httpClient.get<IMenuModelAngular[]>( this.hostUrl + 'restaurants/' + resId + '/menu');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IOrderModel } from '../interfaces/IOrderModelAngular';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  hostUrl:string = environment.hostUrl;\n  constructor(private httpClient: HttpClient) { }\n  \n  postOrder(data:any, resId:string | null, menuId:string | null): Observable<any>{\n    let url = this.hostUrl + 'restaurants/' + resId + '/menu/' + menuId + '/items/order';\n    console.log(url);\n    console.log(data);\n    return this.httpClient.post<any>(url, data);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport IRestaurantModelAngular from '../interfaces/IRestaurantModelAngular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantDataService {\n  private readonly restaurantStorageKey = 'restaurantData';\n\n  constructor() { }\n\n  setRestaurantData(restaurant: IRestaurantModelAngular) {\n    localStorage.setItem(this.restaurantStorageKey, JSON.stringify(restaurant));\n  }\n\n  getRestaurantData(): IRestaurantModelAngular | null {\n    const restaurantData = localStorage.getItem(this.restaurantStorageKey);\n    return restaurantData ? JSON.parse(restaurantData) : null;\n  }\n\n  clearRestaurantData() {\n    localStorage.removeItem(this.restaurantStorageKey);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport IRestaurantModelAngular from '../interfaces/IRestaurantModelAngular';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n  hostUrl:string = environment.hostUrl;\n  \n  constructor(private httpClient: HttpClient) { }\n\n  getAllRestaurants() {\n    console.log(this.hostUrl);\n    return this.httpClient.get<IRestaurantModelAngular[]>(this.hostUrl + 'restaurants');\n  }\n\n  getRestaurantDetailsById(id: string){\n    return this.httpClient.get<IRestaurantModelAngular>(this.hostUrl + 'restaurants/' + id)\n  }\n}\n","export const environment = {\n    hostUrl: \"http://localhost:8080/\"\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","HomeComponent","MenuComponent","MenuItemsComponent","RestaurantsComponent","RestaurantComponent","RestaurantOverviewComponent","OrderComponent","OrderItemsComponent","InvoiceComponent","ProfileComponent","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","i1","exports","i0","ɵɵelementStart","ɵɵlistener","AppComponent_ng_container_14_div_4_Template_button_click_1_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","profile","ɵɵtext","ɵɵelementEnd","AppComponent_ng_container_14_div_4_Template_button_click_3_listener","ctx_r6","logout","ɵɵelementContainerStart","AppComponent_ng_container_14_Template_img_click_3_listener","_r8","ctx_r7","toggleOptions","AppComponent_ng_container_14_Template_img_mouseenter_3_listener","ctx_r9","showOptions","AppComponent_ng_container_14_Template_img_mouseleave_3_listener","$event","ctx_r10","hideOptions","ɵɵtemplate","AppComponent_ng_container_14_div_4_Template","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","authenticationService","customer","name","ɵɵpropertyInterpolate","profilePic","ɵɵsanitizeUrl","ɵɵproperty","showOptionsFlag","AppComponent_ng_template_15_Template_button_click_0_listener","_r12","ctx_r11","login","AppComponent","constructor","router","title","restaurantImage","showProfileForm","event","setTimeout","navigateByUrl","user","userId","subscribe","response","console","log","window","location","href","error","ɵɵdirectiveInject","AuthenticationService","i2","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","AppComponent_ng_container_14_Template","AppComponent_ng_template_15_Template","ɵɵtemplateRefExtractor","isAuthenticated","_r1","FormsModule","BrowserModule","MatCardModule","MatIconModule","RestaurantService","HttpClientModule","MenuService","MenuItemsService","OrderService","BrowserAnimationsModule","AppModule","bootstrap","declarations","isLoggingOut","checkAuthStatus","HomeComponent_Template","ɵɵtextInterpolate","item_r1","ɵɵpipeBind1","price","route","restaurantDataService","selectedItems","ngOnInit","queryParams","params","invoiceItems","JSON","parse","resId","restaurantData","getRestaurantData","restaurantName","restaurantLocation","generateInvoiceContent","invoiceContent","item","calculateTotal","downloadInvoice","blob","Blob","type","link","document","createElement","URL","createObjectURL","download","click","reduce","total","goBack","navigate","ActivatedRoute","RestaurantDataService","InvoiceComponent_Template","InvoiceComponent_div_9_Template","InvoiceComponent_Template_button_click_14_listener","InvoiceComponent_Template_button_click_16_listener","of","menuItem_r1","category","menuItemsService$","parent","menuId","getMenuItems","data","menuItems","features","ɵɵProvidersFeature","MenuItemsComponent_Template","MenuItemsComponent_tr_23_Template","tmp_0_0","menu","ɵɵpureFunction2","_c0","menu_r1","menuService$","getMenu","MenuComponent_Template","MenuComponent_li_13_Template","OrderItemsComponent_tr_18_Template_input_change_3_listener","restoredCtx","_r4","menuItem_r2","$implicit","ctx_r3","toggleSelection","itemId","isSelected","OrderItemsComponent_div_22_Template_button_click_1_listener","_r6","ctx_r5","generateInvoice","OrderService$","itemsSubmitted","itemIds","filter","push","includes","sendOrder","length","alert","quantity","postOrder","items","stringify","i3","OrderItemsComponent_Template","OrderItemsComponent_Template_form_submit_5_listener","OrderItemsComponent_tr_18_Template","OrderItemsComponent_div_22_Template","OrderComponent_Template","OrderComponent_li_13_Template","customerInfo","isEditable","initializeCustomerInfo","email","contactNumber","address","customerType","isEmailSameAsRegisteredUser","toggleEdit","field","editMode","exitEditMode","SaveProfile","updateProfile","CloseProfile","ProfileComponent_Template","ProfileComponent_Template_div_click_9_listener","ProfileComponent_Template_input_ngModelChange_19_listener","ProfileComponent_Template_input_click_19_listener","stopPropagation","ProfileComponent_Template_input_blur_19_listener","ProfileComponent_Template_i_click_20_listener","ProfileComponent_Template_input_ngModelChange_27_listener","ProfileComponent_Template_input_click_27_listener","ProfileComponent_Template_input_blur_27_listener","ProfileComponent_Template_i_click_28_listener","ProfileComponent_div_30_Template","ProfileComponent_Template_input_ngModelChange_35_listener","ProfileComponent_Template_input_click_35_listener","ProfileComponent_Template_input_blur_35_listener","ProfileComponent_Template_i_click_36_listener","ProfileComponent_Template_input_ngModelChange_42_listener","ProfileComponent_Template_input_click_42_listener","ProfileComponent_Template_input_blur_42_listener","ProfileComponent_Template_i_click_43_listener","ProfileComponent_Template_select_ngModelChange_48_listener","ProfileComponent_Template_select_click_48_listener","ProfileComponent_Template_button_click_54_listener","ProfileComponent_Template_button_click_56_listener","service","snapshot","paramMap","get","getRestaurantDetailsById","restaurant","RestaurantOverviewComponent_Template","rating","reviews","cost","cuisines","contact","neighborhood","hours","parkingdetails","isValetPark","ɵɵpureFunction1","ctx_r1","setRestaurantData","i4","RestaurantComponent_Template","RestaurantComponent_li_18_Template","RestaurantComponent_li_19_Template","image","_c1","_c2","map","restaurant_r1","restaurantService","searchTerm","getAllRestaurants","showAllRestaurant","restaurants","slice","filteredRestaurants","showAllCards","filterRestaurants","pipe","toLowerCase","clearSearch","RestaurantsComponent_Template","RestaurantsComponent_Template_input_ngModelChange_5_listener","RestaurantsComponent_Template_input_input_5_listener","RestaurantsComponent_Template_button_click_6_listener","RestaurantsComponent_Template_a_click_13_listener","RestaurantsComponent_div_17_Template","environment","http","isLoggedIn","hostUrl","setAuthenticated","flag","authenticated","getCustomerInfo","profileData","put","post","ɵɵinject","HttpClient","factory","ɵfac","providedIn","httpClient","url","restaurantStorageKey","localStorage","setItem","getItem","clearRestaurantData","removeItem","id","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}