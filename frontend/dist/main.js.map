{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/invoice/invoice.component.ts","./src/app/invoice/invoice.component.html","./src/app/menu-items/menu-items.component.ts","./src/app/menu-items/menu-items.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/my-orders/my-orders.component.ts","./src/app/my-orders/my-orders.component.html","./src/app/order-items/order-items.component.ts","./src/app/order-items/order-items.component.html","./src/app/order/order.component.ts","./src/app/order/order.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/reservation-details/reservation-details.component.ts","./src/app/reservation-details/reservation-details.component.html","./src/app/reservation/reservation.component.ts","./src/app/reservation/reservation.component.html","./src/app/restaurant-overview/restaurant-overview.component.ts","./src/app/restaurant-overview/restaurant-overview.component.html","./src/app/restaurant/restaurant.component.ts","./src/app/restaurant/restaurant.component.html","./src/app/restaurants/restaurants.component.ts","./src/app/restaurants/restaurants.component.html","./src/app/service/authentication.service.ts","./src/app/service/menu-items.service.ts","./src/app/service/menu.service.ts","./src/app/service/order.service.ts","./src/app/service/reservation.service.ts","./src/app/service/restaurant-data.service.ts","./src/app/service/restaurant.service.ts","./src/app/success-dialog/success-dialog.component.ts","./src/app/success-dialog/success-dialog.component.html","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { MenuComponent } from \"./menu/menu.component\";\r\nimport { MenuItemsComponent } from \"./menu-items/menu-items.component\";\r\nimport { RestaurantsComponent } from \"./restaurants/restaurants.component\";\r\nimport { RestaurantComponent } from \"./restaurant/restaurant.component\";\r\nimport { RestaurantOverviewComponent } from \"./restaurant-overview/restaurant-overview.component\";\r\nimport { OrderComponent } from \"./order/order.component\";\r\nimport { OrderItemsComponent } from \"./order-items/order-items.component\";\r\nimport { InvoiceComponent } from \"./invoice/invoice.component\";\r\nimport { ProfileComponent } from \"./profile/profile.component\";\r\nimport { ReservationComponent } from \"./reservation/reservation.component\";\r\nimport { ReservationDetailsComponent } from \"./reservation-details/reservation-details.component\";\r\nimport { MyOrdersComponent } from './my-orders/my-orders.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '',   redirectTo: '/home', pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent},\r\n  { path: 'restaurants', component: RestaurantsComponent},\r\n  { path: 'profile', component: ProfileComponent}, \r\n  { path: 'myorders/', component: MyOrdersComponent}, \r\n  { \r\n    path: 'restaurants/:resId', \r\n    component: RestaurantComponent, \r\n  },\r\n  { path: \"\", redirectTo: \"/home\", pathMatch: \"full\" },\r\n  { path: \"home\", component: HomeComponent },\r\n  { path: \"restaurants\", component: RestaurantsComponent },\r\n  {\r\n    path: \"restaurants/:resId\",\r\n    component: RestaurantComponent,\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        redirectTo: \"overview\",\r\n        pathMatch: \"full\",\r\n      },\r\n      {\r\n        path: \"overview\",\r\n        component: RestaurantOverviewComponent,\r\n      },\r\n      {\r\n        path: \"menu\",\r\n        component: MenuComponent,\r\n      },\r\n      {\r\n        path: \"menu/:menuId/items\",\r\n        component: MenuItemsComponent,\r\n      },\r\n      {\r\n        path: \"order\",\r\n        component: OrderComponent,\r\n      },\r\n      {\r\n        path: \"menu/:menuId/items/order\",\r\n        component: OrderItemsComponent,\r\n      },\r\n      { path: \"reservation\", component: ReservationComponent },\r\n      { path: \"reservation-details\", component: ReservationDetailsComponent },\r\n    ],\r\n  },\r\n  { path: \"invoice\", component: InvoiceComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from './service/authentication.service';\r\nimport { ICustomerModel } from './interfaces/ICustomerModelAngular';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'DineEasy'; \r\n  restaurantImage = '../assets/images/DineEasy.jpg';\r\n  profileData: ICustomerModel;\r\n  showProfileForm = false;\r\n  \r\n  showOptionsFlag: boolean = false;\r\n\r\n  constructor(public authenticationService: AuthenticationService, private router: Router) {\r\n  }\r\n \r\n  // Shows the dropdown options\r\n  showOptions() {\r\n    this.showOptionsFlag = true;\r\n  }\r\n\r\n  // Hides the dropdown options\r\n  hideOptions(event: MouseEvent) {\r\n    setTimeout(() => {\r\n      this.showOptionsFlag = false;\r\n    }, 3000);\r\n  }\r\n\r\n  // Toggles the show options flag to appear and disappear drop-down menu on mouse events\r\n  toggleOptions() {\r\n    this.showOptionsFlag = !this.showOptionsFlag;\r\n  }\r\n\r\n  // Redirects to the profile information if profile option selected\r\n  MyOrders()\r\n  {\r\n    this.router.navigateByUrl('/myorders/');\r\n  }\r\n\r\n  // Redirects to the profile information if profile option selected\r\n  profile()\r\n  {\r\n    this.router.navigateByUrl('/profile');\r\n  }\r\n\r\n  // Invokes to login functionality provided by authentication service\r\n  login() {\r\n    this.authenticationService.login();\r\n  }\r\n\r\n  // Invokes the logout functionality provided by authentication service\r\n  logout() {\r\n    this.authenticationService.logout().subscribe((response) => {\r\n          window.location.href = '/';\r\n        },\r\n        (error) => {\r\n          console.error('Error:', error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<html>\r\n    <!-- Required meta tags -->\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <head>\r\n        <title>DineEasy</title>\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n    </head>\r\n    <body>  \r\n      <nav class=\"navbar navbar-light bg-light\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"dine-easy\" href=\"#\">DineEasy</a>\r\n          <form class=\"d-flex align-items-start\"></form>\r\n          <div class=\"d-flex buttons\">\r\n            <ng-container *ngIf=\"authenticationService.isAuthenticated(); else loginBlock\">\r\n              <div class=\"dropdown\">\r\n                Welcome, {{authenticationService.customer.name}}\r\n                <img class=\"profile-pic\" src=\"{{authenticationService.customer.profilePic}}\" alt=\"Profile Picture\" (click)=\"toggleOptions()\" (mouseenter)=\"showOptions()\" (mouseleave)=\"hideOptions($event)\">\r\n                <div class=\"dropdown-content\" *ngIf=\"showOptionsFlag\">\r\n                  <button class=\"btn  my-button\" (click)=\"MyOrders()\">My Orders</button>\r\n                  <button class=\"btn  my-button\" (click)=\"profile()\">Profile</button>\r\n                  <button class=\"btn  my-button\" (click)=\"logout()\">Logout</button>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n            <ng-template #loginBlock>\r\n              <button class=\"btn  my-button\" (click)=\"login()\">Login</button>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      <div class=\"content\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n            <footer class=\"fixed-footer text-center text-lg-start section-spacing\" style=\"background-color: #ECCDB4;\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"text-black p-3\" style=\"background-color: rgba(0, 0, 0, 0.2);\">\r\n                © 2023 DineEasy.com. All rights reserved.\r\n              </div>\r\n            </div>\r\n          </footer>  \r\n        </body>\r\n</html> ","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RestaurantService } from './service/restaurant.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { MenuService } from './service/menu.service';\r\nimport { MenuItemsComponent } from './menu-items/menu-items.component';\r\nimport { MenuItemsService } from './service/menu-items.service';\r\nimport { OrderService } from './service/order.service';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RestaurantsComponent } from './restaurants/restaurants.component';\r\nimport { RestaurantComponent } from './restaurant/restaurant.component';\r\nimport { RestaurantOverviewComponent } from './restaurant-overview/restaurant-overview.component';\r\nimport { OrderComponent } from './order/order.component';\r\nimport { OrderItemsComponent } from './order-items/order-items.component';\r\nimport { InvoiceComponent } from './invoice/invoice.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { MyOrdersComponent } from './my-orders/my-orders.component';\r\nimport { SuccessDialogComponent } from './success-dialog/success-dialog.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ReservationComponent } from './reservation/reservation.component';\r\nimport { ReservationDetailsComponent } from './reservation-details/reservation-details.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    MenuComponent,\r\n    MenuItemsComponent,\r\n    RestaurantsComponent,\r\n    RestaurantComponent,\r\n    RestaurantOverviewComponent,\r\n    ReservationComponent,\r\n    OrderComponent,\r\n    OrderItemsComponent,\r\n    InvoiceComponent,\r\n    ProfileComponent,\r\n    MyOrdersComponent,\r\n    SuccessDialogComponent,\r\n    ReservationComponent,\r\n    ReservationDetailsComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatDialogModule\r\n  ],\r\n  providers: [RestaurantService, MenuService, MenuItemsService, OrderService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../service/authentication.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { IUserModel } from '../interfaces/IUserModelAngular';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent{\r\n\r\n  constructor(private authenticationService: AuthenticationService, private router:Router) {\r\n    if(!this.authenticationService.isLoggingOut)\r\n      this.authenticationService.checkAuthStatus();\r\n  }\r\n}\r\n","<img src=\"../assets/images/DineEasy.jpg\" class=\"custom-image\" alt=\"Dineasy Logo\">\r\n<app-restaurants></app-restaurants>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RestaurantDataService } from '../service/restaurant-data.service';\r\n\r\n@Component({\r\n  selector: 'app-invoice',\r\n  templateUrl: './invoice.component.html',\r\n  styleUrls: ['./invoice.component.css']\r\n})\r\nexport class InvoiceComponent {\r\n  selectedItems: any = [];\r\n  restaurantName: String;\r\n  restaurantLocation: String;\r\n  resId: String;\r\n  \r\n  constructor(private route: ActivatedRoute, \r\n      private restaurantDataService: RestaurantDataService,\r\n      private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      const invoiceItems = JSON.parse(params['items']);\r\n      this.resId = params['resId'];\r\n      this.selectedItems = invoiceItems;\r\n      const restaurantData = this.restaurantDataService.getRestaurantData();\r\n      if (restaurantData) {\r\n        this.restaurantName = restaurantData.name;\r\n        this.restaurantLocation = restaurantData.location;\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  generateInvoiceContent(): string {\r\n    let invoiceContent = 'Invoice\\n\\n';\r\n  \r\n    invoiceContent += `${this.restaurantName}\\n`;\r\n    invoiceContent += `${this.restaurantLocation}\\n\\n`;\r\n    invoiceContent += '------------------------\\n\\n';\r\n  \r\n    invoiceContent += 'Selected Items:\\n';\r\n    for (const item of this.selectedItems) {\r\n      invoiceContent += `- ${item.name} - ${item.price}\\n`;\r\n    }\r\n  \r\n    invoiceContent += '\\nTotal: ' + this.calculateTotal();\r\n    return invoiceContent;\r\n  }\r\n  \r\n  \r\n  \r\n  downloadInvoice() {\r\n    const invoiceContent = this.generateInvoiceContent();\r\n    const blob = new Blob([invoiceContent], { type: 'text/plain' });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = 'invoice.txt';\r\n    link.click();\r\n  }\r\n  \r\n  calculateTotal(): number {\r\n    return this.selectedItems.reduce((total: any, item: { price: any; }) => total + item.price, 0);\r\n  }\r\n  \r\n  goBack() {\r\n    this.router.navigate(['/restaurants', this.resId]);\r\n  }\r\n  \r\n}","<div class=\"invoice\">\r\n    <h2>Invoice</h2>\r\n    <h2>{{restaurantName}}</h2>\r\n    <h6>{{restaurantLocation}}</h6>\r\n    <p class=\"line-section\"></p>\r\n    <div class=\"item-list\">\r\n      <div *ngFor=\"let item of selectedItems\" class=\"item\">\r\n        <div class=\"item-name\">{{ item.name }}</div>\r\n        <div class=\"item-price\">{{ item.price | currency }}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"total\">Total: {{ calculateTotal() | currency }}</div>\r\n    <div class=\"download-button\">\r\n      <button (click)=\"downloadInvoice()\">Download Invoice</button>\r\n    </div>\r\n  </div>\r\n  <button (click)=\"goBack()\" class=\"back-button\"> Go Back</button>\r\n  \r\n  ","import { Component, Input } from '@angular/core';\r\nimport IMenuItemsModelAngular from '../interfaces/IMenuItemsModelAngular';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MenuItemsService }  from '../service/menu-items.service'\r\n\r\n@Component({\r\n  selector: 'app-menu-items',\r\n  templateUrl: './menu-items.component.html',\r\n  styleUrls: ['./menu-items.component.css'],\r\n  providers: [MenuItemsService]\r\n})\r\nexport class MenuItemsComponent {\r\n  menuItems: Observable<IMenuItemsModelAngular[]>;\r\n  resId: string | null = null;\r\n  constructor(\r\n    private menuItemsService$: MenuItemsService, \r\n    private route: ActivatedRoute\r\n  ) {}\r\n  \r\n  ngOnInit():void {\r\n\r\n    // Get resId param from parent component [Menu]\r\n    this.route.parent?.params.subscribe(params => {\r\n      this.resId = params['resId'];\r\n    });\r\n\r\n    this.route.params.subscribe(params => {\r\n\r\n      // Get the menuId param from the current route\r\n      const menuId = params['menuId'];\r\n\r\n      // Request menu items for that restaurant using the menu items service\r\n      if(this.resId && menuId)\r\n      {\r\n        this.menuItemsService$.getMenuItems(this.resId, menuId).subscribe((data: IMenuItemsModelAngular[]) => {\r\n          this.menuItems = of(data);\r\n        });\r\n      }\r\n    });\r\n\r\n   }\r\n}\r\n\r\n","<html>\r\n    <!-- Required meta tags -->\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <head>\r\n        <title>Menu</title>\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n    </head>\r\n    <body> \r\n      <header>\r\n        <app-menu></app-menu>\r\n      </header>\r\n      <div class=\"container\">\r\n        <div class=\"row section-spacing\">\r\n          <div class=\"col-md-11\">\r\n            <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Category</th>\r\n                  <th>Name</th>\r\n                  <th>Price</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let menuItem of (menuItems | async)?.[0]?.menu\">\r\n                  <td>{{ menuItem.category }}</td>\r\n                  <td>{{ menuItem.name }}</td>\r\n                  <td>{{ menuItem.price }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n      </div>\r\n    </div>>\r\n  </body>  \r\n</html>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport IMenuModelAngular from '../interfaces/IMenuModelAngular';\r\nimport { MenuService } from '../service/menu.service';\r\nimport { Observable, of} from 'rxjs';\r\nimport { MenuItemsService } from '../service/menu-items.service';\r\nimport IMenuItemsModelAngular from '../interfaces/IMenuItemsModelAngular';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css'],\r\n  providers: [MenuService, MenuItemsService]\r\n})\r\n\r\nexport class MenuComponent implements OnInit {\r\n  menu: Observable<IMenuModelAngular[]>;\r\n  menuItems:  Observable<IMenuItemsModelAngular[]>;\r\n  resId: string | null = null;\r\n  constructor(\r\n    private menuService$: MenuService, \r\n    private route: ActivatedRoute \r\n  ) {}\r\n  \r\n  ngOnInit():void { \r\n    \r\n    // Request menu for a restaurant through the menu service\r\n      this.route.parent?.params.subscribe(params => {\r\n        this.resId = params['resId'];\r\n        console.log(\"resID--\",this.resId)\r\n        if (this.resId) {\r\n          this.menuService$.getMenu(this.resId).subscribe((data: IMenuModelAngular[]) => {\r\n            this.menu = of(data);\r\n          });\r\n        }\r\n      });\r\n  }\r\n    \r\n}\r\n","<html>\r\n    <!-- Required meta tags -->\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <head>\r\n        <title>Menu</title>\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n    </head>\r\n    <body> \r\n      <div class=\"container\">\r\n        <div class=\"row section-spacing\">\r\n          <div class=\"col-md-11\">\r\n            <header>\r\n              <ul class=\"nav nav-tabs\">\r\n                <li class=\"nav-item\" *ngFor=\"let menu of menu | async\">\r\n                  <a class=\"nav-link\"\r\n                     [routerLink]=\"['/restaurants', resId, 'menu', menu.menuId, 'items']\"\r\n                     routerLinkActive=\"active\"\r\n                     queryParamsHandling=\"preserve\">\r\n                    {{ menu.name }}\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </header>\r\n            <router-outlet></router-outlet>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </body>  \r\n</html>","import { Component, OnInit } from '@angular/core';\r\nimport { OrderService } from '../service/order.service';\r\nimport { IOrderModel } from '../interfaces/IOrderModelAngular';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-my-orders',\r\n  templateUrl: './my-orders.component.html',\r\n  styleUrls: ['./my-orders.component.css']\r\n})\r\nexport class MyOrdersComponent {\r\n  userOrders: IOrderModel[];\r\n  private subscription: Subscription;\r\n\r\n  constructor( private orderService: OrderService){}\r\n\r\n  ngOnInit()\r\n  {\r\n    this.getOrdersForCurrentUser();\r\n  }\r\n\r\n  //get all tehe orders of current user\r\n  getOrdersForCurrentUser() {\r\n    this.subscription = this.orderService.getAllOrderOfUser().subscribe((data: IOrderModel[]) => {\r\n        this.userOrders = data;\r\n      },\r\n      (error) => {\r\n        console.log('Error retrieving user orders:', error);\r\n      }\r\n    );\r\n  }  \r\n}\r\n","<html>\r\n    <!-- Required meta tags -->\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <head>\r\n        <title>Menu</title>\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n    </head>\r\n    <body> \r\n      <div class=\"container\">\r\n          <h2>My Orders</h2>\r\n\r\n          <div class=\"table-responsive py-3\" *ngIf=\"userOrders && userOrders.length > 0; else noOrders\">\r\n            <table class=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Sr/No</th>\r\n                  <th>Restaurant ID</th>\r\n                  <th>Order Date</th>\r\n                  <th>Status</th>\r\n                  <th>Order Type</th>\r\n                  <th>Quantity</th>\r\n                  <th>Item IDs</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let order of userOrders; let i = index\">\r\n                  <td>{{ i + 1 }}</td>\r\n                  <td>{{ order.resId }}</td>\r\n                  <td>{{ order.orderDate | date }}</td>\r\n                  <td>{{ order.status }}</td>\r\n                  <td>{{ order.orderType }}</td>\r\n                  <td>{{ order.quantity }}</td>\r\n                  <td>{{ order.itemIds.join(', ') }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <ng-template #noOrders>\r\n            <p>No orders found.</p>\r\n          </ng-template>\r\n      </div>\r\n  </body>\r\n</html>\r\n","import { Component, NgModule } from '@angular/core';\r\nimport { MenuItemsService }  from '../service/menu-items.service';\r\nimport IMenuItemsModelAngular from '../interfaces/IMenuItemsModelAngular';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { OrderService } from '../service/order.service';\r\nimport { IOrderModel } from '../interfaces/IOrderModelAngular';\r\nimport { FormsModule } from '@angular/forms';import { SuccessDialogComponent } from '../success-dialog/success-dialog.component'; \r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AuthenticationService } from '../service/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-order-items',\r\n  templateUrl: './order-items.component.html',\r\n  styleUrls: ['./order-items.component.css'],\r\n  providers: [MenuItemsService, OrderService]\r\n})\r\n\r\nexport class OrderItemsComponent {\r\n  menuItems: Observable<IMenuItemsModelAngular[]>\r\n  menuId: string;\r\n  resId: string | null;\r\n  quantity: Number;\r\n  itemIds: String[];\r\n  selectedItems: any[] = [];\r\n  invoiceItems: any[] = [];\r\n  showInvoiceButton: boolean = false\r\n  itemsSubmitted: boolean = false;\r\n\r\n  constructor(\r\n    private menuItemsService$: MenuItemsService, \r\n    private OrderService$: OrderService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private dialog: MatDialog,   \r\n    private authenticationService: AuthenticationService, \r\n  ) {};\r\n\r\n  ngOnInit(): void {\r\n    // empty the selected items\r\n    this.itemIds = [];\r\n    this.selectedItems = [];\r\n    // Get resId param from parent component [Menu]\r\n    this.route.parent?.params.subscribe(params => {\r\n      this.resId = params['resId'];\r\n    });\r\n\r\n    this.route.params.subscribe(params => {\r\n      // Get the menuId param from the current route\r\n      this.menuId = params['menuId'];\r\n\r\n      // Request menu items for that restaurant using the menu items service\r\n      if(this.resId && this.menuId) {\r\n        this.menuItemsService$.getMenuItems(this.resId, this.menuId).subscribe((data: IMenuItemsModelAngular[]) => {\r\n          this.menuItems = of(data);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleSelection(itemId: String, price: number, name: String): void {\r\n    if (this.isSelected(itemId)) {\r\n      this.selectedItems = this.selectedItems.filter(item => item !== itemId);\r\n      this.invoiceItems = this.invoiceItems.filter(item => item.itemId !== itemId);\r\n      console.log(\"deselect the item from the invoiceItems array\", this.invoiceItems )\r\n      console.log(\"deselect the item from the array to selectedItems\", this.selectedItems )\r\n    } else {\r\n      this.selectedItems.push(itemId);\r\n      this.invoiceItems.push({ itemId, name, price });\r\n      console.log(\"successfully added the items to invoiceItems\", this.invoiceItems)\r\n      console.log(\"successfully added the items to selectedItems\", this.selectedItems)\r\n    }\r\n  }\r\n\r\n  // check if the item contains in the selected.\r\n  isSelected(itemId: any): boolean {\r\n    return this.selectedItems.includes(itemId);\r\n  }\r\n\r\n  sendOrder()\r\n  {\r\n    if (this.selectedItems.length === 0) {\r\n      alert(\"Please select at least one item\");\r\n      return;\r\n    }\r\n    console.log(\"OrderSubmitted\");\r\n    const user = this.authenticationService.customer;\r\n    const userId = user.customerId;\r\n    this.itemIds =  this.selectedItems;\r\n    console.log(this.itemIds);\r\n    //calculate quantity\r\n    this.quantity = this.itemIds.length;\r\n\r\n    let data = {\r\n      customerId: userId,\r\n      quantity: this.quantity,\r\n      itemIds: this.itemIds,\r\n    }\r\n    console.log(data);\r\n    this.OrderService$.postOrder(data, this.resId, this.menuId).subscribe(response => {\r\n      console.log(\"response:\",response);\r\n      this.dialog.open(SuccessDialogComponent);\r\n      this.showInvoiceButton = true;\r\n      this.generateInvoice();\r\n    });\r\n  }\r\n\r\n  generateInvoice(): void {\r\n    if (this.invoiceItems.length === 0) {\r\n      console.log('No items selected for the invoice');\r\n      return;\r\n    }\r\n\r\n    console.log('Generating invoice...', this.invoiceItems);\r\n    this.router.navigate(['/invoice'], { queryParams: { items: JSON.stringify(this.invoiceItems), resId: this.resId } });\r\n  }\r\n}","<header>\r\n  <app-order></app-order>\r\n</header>\r\n<div class=\"container\">\r\n  <div class=\"row section-spacing\">\r\n    <div class=\"col-md-11\">\r\n      <form (submit)=\"sendOrder()\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Select</th>\r\n                <th>Category</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let menuItem of (menuItems | async)?.[0]?.menu\">\r\n                <td>\r\n                  <label>\r\n                    <input type=\"checkbox\" name=\"menuItem\" [value]=\"menuItem?.itemId\" (change) = \"toggleSelection(menuItem.itemId, menuItem.price, menuItem.name)\" [checked] = \"isSelected(menuItem.itemId)\"/>\r\n                  </label>\r\n                </td>\r\n                <td>{{ menuItem.category}}</td>\r\n                <td>{{ menuItem.name}}</td>\r\n                <td>{{ menuItem.price}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <button type=\"submit\" class=\"button generate-invoice-button\" onclick=\"sendOrder()\">Submit</button>\r\n        </form>\r\n        <div class=\"invoice-button\" *ngIf=\"itemsSubmitted\">\r\n          <button class=\"button generate-invoice-button\" (click)=\"generateInvoice()\">Generate Invoice</button>\r\n        </div>\r\n      <router-outlet></router-outlet> \r\n  </div>\r\n</div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MenuItemsService }  from '../service/menu-items.service'\r\nimport { OrderService } from '../service/order.service';\r\nimport { MenuComponent } from '../menu/menu.component';\r\nimport { Observable, of } from 'rxjs';\r\nimport IMenuItemsModelAngular from '../interfaces/IMenuItemsModelAngular';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport IMenuModelAngular from '../interfaces/IMenuModelAngular';\r\nimport { MenuService } from '../service/menu.service';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.css'],\r\n  providers: [OrderService, MenuService],\r\n})\r\nexport class OrderComponent {\r\n  menu: Observable<IMenuModelAngular[]>;\r\n  resId: string | null = null;\r\n  constructor(\r\n    private menuService$: MenuService, \r\n    private route: ActivatedRoute \r\n  ){}\r\n  ngOnInit():void { \r\n    \r\n    // Request menu for a restaurant through the menu service\r\n      this.route.parent?.params.subscribe(params => {\r\n        this.resId = params['resId'];\r\n        if (this.resId) {\r\n          this.menuService$.getMenu(this.resId).subscribe((data: IMenuModelAngular[]) => {\r\n            this.menu = of(data);\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","<html>\r\n    <!-- Required meta tags -->\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <head>\r\n        <title>Menu</title>\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n    </head>\r\n    <body> \r\n      <div class=\"container\">\r\n        <div class=\"row section-spacing\">\r\n          <div class=\"col-md-11\">\r\n            <header>\r\n              <ul class=\"nav nav-tabs\">\r\n                <li class=\"nav-item\" *ngFor=\"let menu of menu | async\">\r\n                  <a class=\"nav-link\"\r\n                    [routerLink]=\"['/restaurants', resId, 'menu', menu.menuId, 'items', 'order']\"\r\n                    routerLinkActive=\"active\"\r\n                    queryParamsHandling=\"preserve\">\r\n                    {{ menu.name }}\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </header>\r\n            <router-outlet></router-outlet>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </body>  \r\n</html>","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from '../service/authentication.service';\r\nimport { ICustomerModel } from '../interfaces/ICustomerModelAngular';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent {\r\n\r\n  authenticated:any;\r\n  customerInfo: any = {};\r\n  isEditable: { [key: string]: boolean } = {};\r\n\r\n  constructor(private authenticationService: AuthenticationService, private router: Router) {\r\n    this.initializeCustomerInfo();\r\n  }\r\n\r\n  // Initalizes the default customer information to be shown on the form\r\n  initializeCustomerInfo() {\r\n    const customer = this.authenticationService.customer;\r\n    \r\n    this.customerInfo = {\r\n      name: customer.name,\r\n      profilePic: customer.profilePic,\r\n      email: customer.email,\r\n      contactNumber: customer.contactNumber,\r\n      address: customer.address,\r\n      customerType: customer.customerType,\r\n    };\r\n  }\r\n\r\n  // Checks if the same email is provided as user who is logged-in\r\n  isEmailSameAsRegisteredUser()\r\n  {\r\n    return (this.customerInfo.email === this.authenticationService.user.email);\r\n  }\r\n\r\n  // Toggles the edit flags to switch between read-only and edit mode.\r\n  toggleEdit(field:string, editMode: boolean): void {\r\n    this.isEditable[field] = editMode;\r\n  }\r\n\r\n  // Exit edit mode when click anywhere outside text boxes\r\n  exitEditMode()\r\n  {\r\n    for (const field in this.isEditable) {\r\n      this.isEditable[field] = false;\r\n    }\r\n  }\r\n\r\n  // Saves the profile if any change is made\r\n  SaveProfile()\r\n  {\r\n    if(this.customerInfo === this.authenticationService.customer)\r\n    {\r\n      console.log('No change in the profile');\r\n      this.router.navigateByUrl('/');\r\n    }\r\n    else\r\n    {\r\n      this.authenticationService.updateProfile(this.customerInfo).subscribe(\r\n        (response: any) => {\r\n          console.log('Profile updated successfully');\r\n          this.router.navigateByUrl('/');\r\n        },\r\n        (error: any) => {\r\n          console.error('Error updating profile:', error);\r\n        }\r\n      )\r\n    }\r\n    \r\n  }\r\n\r\n  CloseProfile()\r\n  {\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  \r\n}\r\n","<html>\r\n    <!-- Required meta tags -->\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <head>\r\n        <title>Profile</title>\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n    </head>\r\n    <body> \r\n      <div class=\"profile-container\">\r\n        <div class=\"profile-form\" (click)=\"exitEditMode()\">\r\n          <div class=\"form-group\">\r\n            <label for=\"profilePic\">Profile Picture</label>\r\n            <div class=\"input-group\">\r\n              <img class=\"profile-picture\" src=\"{{customerInfo.profilePic}}\" alt=\"Profile Picture\">\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Name</label>\r\n            <div class=\"input-group\">\r\n              <input id=\"name\" class=\"form-control rounded\" type=\"text\" [(ngModel)]=\"customerInfo.name\" [readonly]=\"!isEditable['name']\" [autofocus]=\"isEditable\" (click)=\"$event.stopPropagation()\"  (blur)=\"toggleEdit('name', false)\" required>\r\n              <i class=\"edit-icon\" (click)=\"toggleEdit('name', true); $event.stopPropagation() \">&#9998;</i>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group form-group-row\">\r\n            <div class=\"form-group-item\">\r\n              <label for=\"email\">Email ID: </label>\r\n              <div class=\"input-group\">\r\n                <input id =\"email\" class=\"form-control rounded\" type=\"email\" [(ngModel)]=\"customerInfo.email\" [readonly]=\"!isEditable['email']\" (click)=\"$event.stopPropagation()\" (blur)=\"toggleEdit('email', false)\" required>\r\n                <i class=\"edit-icon\" (click)=\"toggleEdit('email', true); $event.stopPropagation();\">&#9998;</i>\r\n              </div>\r\n                <div class=\"email-error\" *ngIf=\"!isEmailSameAsRegisteredUser()\">\r\n                  Provided email does not match with registered email.\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group-item\">\r\n              <label for=\"phone\">Phone: </label>\r\n              <div class=\"input-group\">\r\n                <input id=\"phone\" class=\"form-control rounded\" type=\"tel\" [(ngModel)]=\"customerInfo.contactNumber\" [readonly]=\"!isEditable['phone']\" (click)=\"$event.stopPropagation()\"  (blur)=\"toggleEdit('phone', false)\">\r\n                <i class=\"edit-icon\" (click)=\"toggleEdit('phone', true); $event.stopPropagation()\">&#9998;</i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"address\">Address:</label>\r\n            <div class=\"input-group\">\r\n              <input id=\"address\" class=\"form-control rounded\" type=\"text\" [(ngModel)]=\"customerInfo.address\" [readonly]=\"!isEditable['address']\" (click)=\"$event.stopPropagation()\" (blur)=\"toggleEdit('address', false)\">\r\n              <i class=\"edit-icon\" (click)=\"toggleEdit('address', true); $event.stopPropagation()\">&#9998;</i>\r\n            </div>\r\n          </div>\r\n          <div id=\"customerType\" class=\"form-group\">\r\n            <label for=\"customerType\">Want to be Premium member?</label>\r\n            <select class=\"form-control rounded\" [(ngModel)]=\"customerInfo.customerType\" (click)=\"$event.stopPropagation()\" required>\r\n              <option value=\"Freemium\">Freemium</option>\r\n              <option value=\"Premium\">Premium</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"table-button\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"SaveProfile(); $event.stopPropagation()\">Save Profile</button>\r\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"CloseProfile();  $event.stopPropagation()\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        <router-outlet></router-outlet>\r\n    </body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-reservation-details',\r\n  templateUrl: './reservation-details.component.html',\r\n  styleUrls: ['./reservation-details.component.css']\r\n})\r\nexport class ReservationDetailsComponent implements OnInit {\r\n  reservationId: string;\r\n  date: string;\r\n  time: string;\r\n  tableNumber: number;\r\n  resId: string;\r\n\r\n  constructor(private route: ActivatedRoute,  private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.reservationId = params['reservationId'];\r\n      this.tableNumber = +params['tableNumber'];\r\n      this.date = params['date'];\r\n      this.time = params['time'];\r\n      this.resId =params['resId'];\r\n    });\r\n  }\r\n\r\n  goToOrder() {\r\n    this.router.navigate(['../order'], { relativeTo: this.route });\r\n  }\r\n}","<div class=\"container\">\r\n  <div class=\"reservation-status\">\r\n    <h2>Reservation Status</h2>\r\n    <p>Hello customer, your reservation with us is confirmed. Your reservation ID is {{ reservationId }}.</p>\r\n    <p>Table Number {{tableNumber}} is reserved for you. </p>\r\n    <p>Thank you for choosing us !</p>\r\n  </div>\r\n\r\n  <div class=\"pre-order\">\r\n    <p> Do you want to order your meal now itself?</p>\r\n    <button (click)=\"goToOrder()\">Order</button>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { ReservationService } from '../service/reservation.service';\r\nimport { IReservationModelAngular } from '../interfaces/IReservationModelAngular';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../service/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-reservation',\r\n  templateUrl: './reservation.component.html',\r\n  styleUrls: ['./reservation.component.css'],\r\n})\r\nexport class ReservationComponent {\r\n  partySize: number;\r\n  date: string;\r\n  time: string;\r\n  phone: string;\r\n  reservationId: string;\r\n  tableNumber: number;\r\n  isReservationConfirmed: boolean = false;\r\n\r\n  constructor(\r\n    private reservationService: ReservationService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private authenticationService: AuthenticationService, \r\n\r\n  ) {}\r\n\r\n  createReservation() {\r\n    const user = this.authenticationService.customer;\r\n    const userID = user.customerId\r\n    console.log(userID)\r\n    const reservation: IReservationModelAngular = {\r\n      peopleCount: parseInt(this.partySize.toString()),\r\n      date: this.date,\r\n      time: this.time,\r\n      phoneNumber: this.phone,\r\n      reservationId: '',\r\n      customerId: parseInt(userID.toString()),\r\n      resId: this.route.parent?.snapshot.paramMap.get('resId')!,\r\n      status: 'pending',\r\n      tableNumber: Math.floor(Math.random() * 20) + 1, // Generate a random number between 1 and 20\r\n    };\r\n\r\n    this.reservationService.createReservation(reservation).subscribe(\r\n      (response) => {\r\n        this.reservationId = response.reservationId;\r\n        const tableNumber = +response.tableNumber;\r\n        if (!isNaN(tableNumber)) {\r\n          this.tableNumber = tableNumber;\r\n          this.isReservationConfirmed = true;\r\n          console.log('Response:', response);\r\n          console.log(userID)\r\n          this.router.navigate(['../reservation-details'], {\r\n            relativeTo: this.route,\r\n            queryParams: {\r\n              reservationId: this.reservationId,\r\n              tableNumber: this.tableNumber,\r\n            },\r\n          });\r\n        } else {\r\n          console.error('Invalid table number');\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log('Error:', error);\r\n        console.error('Failed to create reservation:', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"reservation-container\">\r\n  <h1 class=\"reservation-title\">Make a Reservation</h1>\r\n  <div class=\"reservation-form\">\r\n    <div class=\"form-group\">\r\n      <label for=\"partySize\">Party Size:</label>\r\n      <select id=\"partySize\" class=\"form-control\" [(ngModel)]=\"partySize\">\r\n        <option value=\"1\">1 person</option>\r\n        <option value=\"2\">2 people</option>\r\n        <option value=\"3\">3 people</option>\r\n        <option value=\"4\">4 people</option>\r\n        <option value=\"5\">5 people</option>\r\n        <option value=\"6\">6 people</option>\r\n        <option value=\"7\">7 people</option>\r\n        <option value=\"8\">8 people</option>\r\n        <option value=\"9\">9 person</option>\r\n        <option value=\"10\">10 people</option>\r\n        <option value=\"11\">11 people</option>\r\n        <option value=\"12\">12 people</option>\r\n        <option value=\"13\">13 people</option>\r\n        <option value=\"14\">14 people</option>\r\n        <option value=\"15\">15 people</option>\r\n        <option value=\"16\">16 people</option>\r\n        <option value=\"17\">17 people</option>\r\n        <option value=\"18\">18 people</option>\r\n        <option value=\"19\">19 people</option>\r\n        <option value=\"20\">20 people</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group form-group-row\">\r\n      <div class=\"form-group-item\">\r\n        <label for=\"date\">Date:</label>\r\n        <input type=\"date\" id=\"date\" class=\"form-control\" [(ngModel)]=\"date\" />\r\n      </div>\r\n      <div class=\"form-group-item\">\r\n        <label for=\"time\">Time:</label>\r\n        <input type=\"time\" id=\"time\" class=\"form-control\" [(ngModel)]=\"time\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"phone\">Phone:</label>\r\n      <input type=\"tel\" id=\"phone\" class=\"form-control\" [(ngModel)]=\"phone\" />\r\n    </div>\r\n    <div class=\"table-button\">\r\n      <button\r\n        type=\"submit\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"createReservation()\"\r\n      >\r\n        Reserve a Table\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport IRestaurantModelAngular from '../interfaces/IRestaurantModelAngular';\r\nimport { RestaurantService } from '../service/restaurant.service';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-restaurant-overview',\r\n  templateUrl: './restaurant-overview.component.html',\r\n  styleUrls: ['./restaurant-overview.component.css']\r\n})\r\nexport class RestaurantOverviewComponent {\r\n    restaurant: IRestaurantModelAngular;\r\n  \r\n    constructor(\r\n      private route: ActivatedRoute,\r\n      private service: RestaurantService\r\n    ) {}\r\n  \r\n    ngOnInit() { \r\n      const resId = this.route.parent?.snapshot.paramMap.get('resId')!;\r\n      console.log(\"resId \", resId);\r\n      this.service.getRestaurantDetailsById(resId).subscribe(\r\n        data => {\r\n          this.restaurant = data\r\n          console.log(\"restaurant\", this.restaurant.name)\r\n        }\r\n      );\r\n    }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row section-spacing\">\r\n    <div class=\"col-md-11\">\r\n      <h2>{{ restaurant.name }}</h2>\r\n      <br />\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3\">\r\n          <div class=\"icon-container\">\r\n            <div class=\"icon-info\">\r\n              <mat-icon class=\"icon-yellow\">star</mat-icon>\r\n              <strong class=\"heading\">Ratings:</strong>\r\n            </div>\r\n            <span class=\"info-text\">{{ restaurant.rating }}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div class=\"icon-container\">\r\n            <div class=\"icon-info\">\r\n              <mat-icon class=\"icon-grey\">comment</mat-icon>\r\n              <strong class=\"heading\">Review:</strong>\r\n            </div>\r\n            <span class=\"info-text\">{{ restaurant.reviews }}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div class=\"icon-container\">\r\n            <div class=\"icon-info\">\r\n              <mat-icon class=\"icon-green\">attach_money</mat-icon>\r\n              <strong class=\"heading\">Cost:</strong>\r\n            </div>\r\n            <span class=\"info-text\">{{ restaurant.cost }}</span>\r\n          </div>\r\n        </div>\r\n       \r\n        <div class=\"col-md-3\">\r\n          <div class=\"icon-container\">\r\n              <strong class=\"heading\">Cuisine:</strong>\r\n            <span class=\"info-text\">{{ restaurant.cuisines }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row line-section section-spacing shadow-box\">\r\n      <h3>About</h3>\r\n      <div class=\"col-md-6\">\r\n        <p></p>\r\n        <div class=\"icon-container\">\r\n          <div class=\"icon-info\">\r\n            <mat-icon class=\"icon-blue\">phone</mat-icon>\r\n            <strong class=\"heading\">Contact:</strong>\r\n          </div>\r\n          <span class=\"info-text\">{{ restaurant.contact }}</span>\r\n        </div>\r\n        <p></p>\r\n        <div class=\"icon-container\">\r\n          <div class=\"icon-info\">\r\n            <mat-icon class=\"icon-grey\">location_city</mat-icon>\r\n            <strong class=\"heading\">Neighborhood:</strong>\r\n          </div>\r\n          <span class=\"info-text\">{{ restaurant.neighborhood }} </span>\r\n        </div>\r\n        <p></p>\r\n        <div class=\"icon-container\">\r\n          <div class=\"icon-info\">\r\n            <mat-icon class=\"icon-grey\">schedule</mat-icon>\r\n            <strong class=\"heading\">Hours:</strong>\r\n          </div>\r\n          <span class=\"info-text\">{{ restaurant.hours }} </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6 justify-content-end\">\r\n        <div class=\"icon-container\">\r\n          <div class=\"icon-info\">\r\n            <mat-icon class=\"icon-green\">local_parking</mat-icon>\r\n            <strong class=\"heading\">Parking Info: </strong>\r\n          </div>\r\n          <span class=\"info-text\">{{ restaurant.parkingdetails }} </span>\r\n        </div>\r\n        <!-- <div class=\"icon-info\">\r\n          <mat-icon class=\"icon-green\">local_parking</mat-icon>\r\n          <strong class=\"heading\">Parking Details: </strong>\r\n        </div>\r\n          {{ restaurant.parkingdetails }} -->\r\n\r\n        <p></p>\r\n        <div class=\"icon-container\">\r\n          <div class=\"icon-info\">\r\n            <strong class=\"heading\">Valet Parking:</strong>\r\n            <span class=\"info-text\">\r\n              {{ restaurant.isValetPark ? \"Yes\" : \"No\" }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport IRestaurantModelAngular from '../interfaces/IRestaurantModelAngular';\r\nimport { RestaurantService } from '../service/restaurant.service';\r\nimport { RestaurantDataService } from '../service/restaurant-data.service';\r\nimport { AuthenticationService } from '../service/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-restaurant',\r\n  templateUrl: './restaurant.component.html',\r\n  styleUrls: ['./restaurant.component.css']\r\n})\r\nexport class RestaurantComponent {\r\n  restaurant: IRestaurantModelAngular;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private service: RestaurantService,\r\n    private restaurantDataService: RestaurantDataService,\r\n    public  authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const resId = this.route.snapshot.paramMap.get('resId')!;\r\n    console.log(\"resId \", resId);\r\n    this.service.getRestaurantDetailsById(resId).subscribe(\r\n      data => {\r\n        this.restaurant = data\r\n        console.log(\"restaurant\", this.restaurant.name)\r\n        this.restaurantDataService.setRestaurantData(this.restaurant);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<html>\r\n    <!-- Required meta tags -->\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <head>\r\n        <title>{{restaurant.name}}</title>\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n    </head>\r\n    <body> \r\n        <img src={{restaurant.image}} class=\"custom-image\" alt=\"Dineasy Logo\">\r\n        \r\n        <div class=\"container\">\r\n                <!-- Replace the below code with your carousel implementation --> \r\n                <header>\r\n                <ul class=\"nav nav-tabs\">\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link active\" aria-current=\"page\" [routerLink]=\"['/restaurants', restaurant.resId, 'overview']\" routerLinkActive=\"active\">OverView</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link\" [routerLink]=\"['/restaurants', restaurant.resId, 'menu']\" routerLinkActive=\"active\">Menu</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\"authenticationService.isAuthenticated() && authenticationService.customer.customerType === 'Premium'\">\r\n                      <a class=\"nav-link\" [routerLink]=\"'/restaurants/' + restaurant.resId + '/reservation'\">Reservation</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\"authenticationService.isAuthenticated()\">\r\n                      <a class=\"nav-link\" [routerLink]=\"['/restaurants', restaurant.resId, 'order']\" routerLinkActive=\"active\">Order</a>\r\n                    </li>\r\n                  </ul>\r\n            </header>\r\n          </div>\r\n        <router-outlet></router-outlet>\r\n    </body>\r\n</html>","import { Component } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport IRestaurantModelAngular from '../interfaces/IRestaurantModelAngular';\r\nimport { RestaurantService } from '../service/restaurant.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-restaurants',\r\n  templateUrl: './restaurants.component.html',\r\n  styleUrls: ['./restaurants.component.css']\r\n})\r\nexport class RestaurantsComponent {\r\n  resId: string;\r\n  restaurants: Observable<IRestaurantModelAngular[]>;\r\n  showAllRestaurant: IRestaurantModelAngular[];\r\n  filteredRestaurants: Observable<IRestaurantModelAngular[]>;\r\n  searchTerm: string = '';\r\n\r\n  constructor(private restaurantService: RestaurantService) {}\r\n\r\n  ngOnInit() {\r\n    this.restaurantService.getAllRestaurants().subscribe(data => {\r\n      this.showAllRestaurant = data;\r\n      this.restaurants = of(data.slice(0, 4));\r\n      this.filteredRestaurants = this.restaurants;\r\n    });\r\n  }\r\n\r\n  showAllCards() {\r\n    this.restaurants = of(this.showAllRestaurant);\r\n    this.filteredRestaurants = this.restaurants;\r\n  }\r\n\r\n  filterRestaurants() {\r\n    if (this.searchTerm) {\r\n      // Filter restaurants based on the search term\r\n      this.filteredRestaurants = this.restaurants.pipe(\r\n        map(restaurants => restaurants.filter(restaurant =>\r\n          restaurant.name.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n          restaurant.cuisines.toLowerCase().includes(this.searchTerm.toLowerCase())\r\n        ))\r\n      );\r\n    } else {\r\n      // If the search term is empty, show all restaurants\r\n      this.filteredRestaurants = this.restaurants;\r\n    }\r\n  }\r\n\r\n  clearSearch() {\r\n    this.searchTerm = '';\r\n    this.filterRestaurants();\r\n  }\r\n}\r\n","<body>\r\n  <div class=\"container\">\r\n    <!-- Search input field -->\r\n    <div class=\"row section-spacing\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"input-group\">\r\n          <input class=\"form-control search-input\" type=\"text\" placeholder=\"Search your favorite Restaurant or Cuisine\" [(ngModel)]=\"searchTerm\" (input)=\"filterRestaurants()\">\r\n          <button class=\"btn btn-outline-secondary clear-button\" type=\"button\" (click)=\"clearSearch()\">CLEAR</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n     <!-- Restaurants section -->\r\n     <div class=\"row section-spacing\">\r\n      <div class=\"col-md-11\">\r\n        <h2 class=\"dining\">Available For Dining</h2>\r\n      </div>\r\n      <div class=\"col-md\">\r\n        <a class=\"btn btn-link my-button\" (click)=\"showAllCards()\">See All</a>\r\n      </div>\r\n    </div>\r\n    \r\n\r\n    <hr class=\"line-section\">\r\n\r\n    <!-- Filtered restaurants list -->\r\n    <div class=\"row justify-content-start d-flex flex-wrap section-spacing\">\r\n      <div class=\"col-sm-6 col-md-4 col-lg-3\" *ngFor=\"let restaurant of filteredRestaurants | async\">\r\n        <mat-card class=\"card h-100\">\r\n          <img mat-card-image class=\"img-width\" [src]=\"restaurant.image\" alt=\"Restaurant Image\">\r\n          <mat-card-content>\r\n            <h5 class=\"card-title\">{{ restaurant.name }}</h5>\r\n            <div class=\"d-flex justify-content-between mb-2\">\r\n              <p class=\"small-text text-secondary info\">Rating: {{ restaurant.rating }}</p>\r\n              <p class=\"small-text text-secondary info\">Reviews: {{ restaurant.reviews }}</p>\r\n            </div>\r\n            <p class=\"text-truncate info\">Cuisines: {{ restaurant.cuisines }}</p>\r\n            <button mat-button color=\"primary\" [routerLink]=\"['/restaurants', restaurant.resId, 'overview']\" class=\"view-restaurant\">View Restaurant</button>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { IUserModel } from '../interfaces/IUserModelAngular';\r\nimport { environment } from '../../environments/environment';\r\nimport { ICustomerModel } from '../interfaces/ICustomerModelAngular';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  \r\n  private isLoggedIn = false;\r\n  public isLoggingOut = false;\r\n  public user: IUserModel;\r\n  public customer: ICustomerModel;\r\n  name: String;\r\n  hostUrl: String = environment.hostUrl;\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  // Used to set the isLoggenIn flag\r\n  setAuthenticated(flag: boolean): void {\r\n    this.isLoggedIn = flag;\r\n  }\r\n\r\n  // Checks if the current user is authenticated and retrieves the users information\r\n  checkAuthStatus() {\r\n    this.http.get<any>(this.hostUrl + 'checkAuth').subscribe(\r\n      (response) => {\r\n        if (response.authenticated === true) {\r\n          this.isLoggedIn = true;\r\n          this.user = response.user;\r\n          this.getCustomerInfo().subscribe(\r\n            (data) => {\r\n              this.customer = data;\r\n            },\r\n            (error) => {\r\n              console.error('Error:', error);\r\n            }\r\n          );\r\n        } else {\r\n          this.isLoggedIn = false;\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('Error:', error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  // Gets the customer information\r\n  getCustomerInfo() {\r\n    return this.http.get<ICustomerModel>(this.hostUrl + 'user');\r\n  }\r\n  \r\n  // Checks where the current user is logged-in\r\n  isAuthenticated(): boolean {\r\n    return this.isLoggedIn;\r\n  }\r\n\r\n  // Updated the customer profile\r\n  updateProfile(profileData: any) {\r\n    return this.http.put(this.hostUrl + 'profile', profileData);\r\n  }\r\n\r\n  // Redirect to Google OAuth callback API for login\r\n  login() {\r\n    this.isLoggingOut = false;\r\n    window.location.href = '/auth/google';\r\n  }\r\n\r\n  // Invoke the logout API to destroy the current session\r\n  logout(): Observable<any>  {\r\n    this.isLoggedIn = false;\r\n    this.isLoggingOut = true;\r\n    return this.http.post( this.hostUrl + 'logout', {}, { responseType: 'text' });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport IMenuItemsModelAngular from '../interfaces/IMenuItemsModelAngular';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MenuItemsService {\r\n  hostUrl:string = environment.hostUrl;\r\n  \r\n  constructor(private httpClient: HttpClient) { }\r\n  \r\n  getMenuItems(resId: string, menuId: string) {\r\n    console.log(\"Here\")\r\n    return this.httpClient.get<IMenuItemsModelAngular[]>( this.hostUrl + 'restaurants/' + resId + '/menu/' + menuId + '/items');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport IMenuModelAngular from '../interfaces/IMenuModelAngular';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MenuService {\r\n  hostUrl:string = environment.hostUrl;\r\n  constructor(private httpClient: HttpClient) { }\r\n  \r\n  getMenu(resId: string) {\r\n    return this.httpClient.get<IMenuModelAngular[]>( this.hostUrl + 'restaurants/' + resId + '/menu');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IOrderModel } from '../interfaces/IOrderModelAngular';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  hostUrl:string = environment.hostUrl;\r\n  constructor(private httpClient: HttpClient) { }\r\n  \r\n  //post a order\r\n  postOrder(data:any, resId:string | null, menuId:string | null): Observable<any>{\r\n    let url = this.hostUrl + 'restaurants/' + resId + '/menu/' + menuId + '/items/order';\r\n    console.log(url);\r\n    console.log(data);\r\n    return this.httpClient.post<any>(url, data);\r\n  }\r\n\r\n  getAllOrderOfUser() {\r\n    console.log(\"in get all order of user\");\r\n    return this.httpClient.get<IOrderModel[]>(this.hostUrl + 'myorders');\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport  {IReservationModelAngular}  from '../interfaces/IReservationModelAngular';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReservationService {\r\n  hostUrl:string = environment.hostUrl;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  createReservation(reservation: IReservationModelAngular): Observable<IReservationModelAngular> {\r\n    console.log(\"reservation\", reservation)\r\n    return this.httpClient.post<IReservationModelAngular>(this.hostUrl + 'addreservation', reservation);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport IRestaurantModelAngular from '../interfaces/IRestaurantModelAngular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestaurantDataService {\r\n  private readonly restaurantStorageKey = 'restaurantData';\r\n\r\n  constructor() { }\r\n\r\n  setRestaurantData(restaurant: IRestaurantModelAngular) {\r\n    localStorage.setItem(this.restaurantStorageKey, JSON.stringify(restaurant));\r\n  }\r\n\r\n  getRestaurantData(): IRestaurantModelAngular | null {\r\n    const restaurantData = localStorage.getItem(this.restaurantStorageKey);\r\n    return restaurantData ? JSON.parse(restaurantData) : null;\r\n  }\r\n\r\n  clearRestaurantData() {\r\n    localStorage.removeItem(this.restaurantStorageKey);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport IRestaurantModelAngular from '../interfaces/IRestaurantModelAngular';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestaurantService {\r\n  hostUrl:string = environment.hostUrl;\r\n  \r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAllRestaurants() {\r\n    console.log(this.hostUrl);\r\n    return this.httpClient.get<IRestaurantModelAngular[]>(this.hostUrl + 'restaurants');\r\n  }\r\n\r\n  getRestaurantDetailsById(id: string){\r\n    return this.httpClient.get<IRestaurantModelAngular>(this.hostUrl + 'restaurants/' + id)\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-success-dialog',\r\n  templateUrl: './success-dialog.component.html',\r\n  styleUrls: ['./success-dialog.component.css']\r\n})\r\nexport class SuccessDialogComponent {\r\n\r\n  constructor (public dilogRef: MatDialogRef<SuccessDialogComponent>){}\r\n\r\n  ngOnInit(): void{\r\n  }\r\n\r\n  closeDialog():void{\r\n    this.dilogRef.close();\r\n  }\r\n}\r\n","<div class=\"text-center p-4\">\r\n    <h2 class=\"mb-4\">Order Status</h2>\r\n    <p class=\"mb-4\">Your order has been submitted successfully.</p>\r\n    <div class=\"d-flex justify-content-center\">\r\n        <button mat-button mat-dialog-close=\"'close'\" class=\"btn btn-primary\">Close</button>\r\n    </div>\r\n</div>","export const environment = {\r\n    hostUrl: \"http://localhost:8080/\"\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","HomeComponent","MenuComponent","MenuItemsComponent","RestaurantsComponent","RestaurantComponent","RestaurantOverviewComponent","OrderComponent","OrderItemsComponent","InvoiceComponent","ProfileComponent","ReservationComponent","ReservationDetailsComponent","MyOrdersComponent","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","i1","exports","i0","ɵɵelementStart","ɵɵlistener","AppComponent_ng_container_14_div_4_Template_button_click_1_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","MyOrders","ɵɵtext","ɵɵelementEnd","AppComponent_ng_container_14_div_4_Template_button_click_3_listener","ctx_r6","profile","AppComponent_ng_container_14_div_4_Template_button_click_5_listener","ctx_r7","logout","ɵɵelementContainerStart","AppComponent_ng_container_14_Template_img_click_3_listener","_r9","ctx_r8","toggleOptions","AppComponent_ng_container_14_Template_img_mouseenter_3_listener","ctx_r10","showOptions","AppComponent_ng_container_14_Template_img_mouseleave_3_listener","$event","ctx_r11","hideOptions","ɵɵtemplate","AppComponent_ng_container_14_div_4_Template","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","authenticationService","customer","name","ɵɵpropertyInterpolate","profilePic","ɵɵsanitizeUrl","ɵɵproperty","showOptionsFlag","AppComponent_ng_template_15_Template_button_click_0_listener","_r13","ctx_r12","login","AppComponent","constructor","router","title","restaurantImage","showProfileForm","event","setTimeout","navigateByUrl","subscribe","response","window","location","href","error","console","ɵɵdirectiveInject","AuthenticationService","i2","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","AppComponent_ng_container_14_Template","AppComponent_ng_template_15_Template","ɵɵtemplateRefExtractor","isAuthenticated","_r1","FormsModule","BrowserModule","MatCardModule","MatIconModule","RestaurantService","HttpClientModule","MenuService","MenuItemsService","OrderService","BrowserAnimationsModule","SuccessDialogComponent","MatDialogModule","AppModule","bootstrap","declarations","isLoggingOut","checkAuthStatus","HomeComponent_Template","ɵɵtextInterpolate","item_r1","ɵɵpipeBind1","price","route","restaurantDataService","selectedItems","ngOnInit","queryParams","params","invoiceItems","JSON","parse","resId","restaurantData","getRestaurantData","restaurantName","restaurantLocation","generateInvoiceContent","invoiceContent","item","calculateTotal","downloadInvoice","blob","Blob","type","link","document","createElement","URL","createObjectURL","download","click","reduce","total","goBack","navigate","ActivatedRoute","RestaurantDataService","InvoiceComponent_Template","InvoiceComponent_div_9_Template","InvoiceComponent_Template_button_click_14_listener","InvoiceComponent_Template_button_click_16_listener","of","menuItem_r1","category","menuItemsService$","parent","menuId","getMenuItems","data","menuItems","features","ɵɵProvidersFeature","MenuItemsComponent_Template","MenuItemsComponent_tr_23_Template","tmp_0_0","menu","ɵɵpureFunction2","_c0","menu_r1","menuService$","log","getMenu","MenuComponent_Template","MenuComponent_li_13_Template","i_r5","order_r4","orderDate","status","orderType","quantity","itemIds","join","MyOrdersComponent_div_11_tr_19_Template","userOrders","orderService","getOrdersForCurrentUser","subscription","getAllOrderOfUser","MyOrdersComponent_Template","MyOrdersComponent_div_11_Template","MyOrdersComponent_ng_template_12_Template","length","OrderItemsComponent_tr_18_Template_input_change_3_listener","restoredCtx","_r4","menuItem_r2","$implicit","ctx_r3","toggleSelection","itemId","isSelected","OrderItemsComponent_div_22_Template_button_click_1_listener","_r6","ctx_r5","generateInvoice","OrderService$","dialog","showInvoiceButton","itemsSubmitted","filter","push","includes","sendOrder","alert","user","userId","customerId","postOrder","open","items","stringify","i3","i4","MatDialog","i5","OrderItemsComponent_Template","OrderItemsComponent_Template_form_submit_5_listener","OrderItemsComponent_tr_18_Template","OrderItemsComponent_div_22_Template","OrderComponent_Template","OrderComponent_li_13_Template","customerInfo","isEditable","initializeCustomerInfo","email","contactNumber","address","customerType","isEmailSameAsRegisteredUser","toggleEdit","field","editMode","exitEditMode","SaveProfile","updateProfile","CloseProfile","ProfileComponent_Template","ProfileComponent_Template_div_click_9_listener","ProfileComponent_Template_input_ngModelChange_19_listener","ProfileComponent_Template_input_click_19_listener","stopPropagation","ProfileComponent_Template_input_blur_19_listener","ProfileComponent_Template_i_click_20_listener","ProfileComponent_Template_input_ngModelChange_27_listener","ProfileComponent_Template_input_click_27_listener","ProfileComponent_Template_input_blur_27_listener","ProfileComponent_Template_i_click_28_listener","ProfileComponent_div_30_Template","ProfileComponent_Template_input_ngModelChange_35_listener","ProfileComponent_Template_input_click_35_listener","ProfileComponent_Template_input_blur_35_listener","ProfileComponent_Template_i_click_36_listener","ProfileComponent_Template_input_ngModelChange_42_listener","ProfileComponent_Template_input_click_42_listener","ProfileComponent_Template_input_blur_42_listener","ProfileComponent_Template_i_click_43_listener","ProfileComponent_Template_select_ngModelChange_48_listener","ProfileComponent_Template_select_click_48_listener","ProfileComponent_Template_button_click_54_listener","ProfileComponent_Template_button_click_56_listener","reservationId","tableNumber","date","time","goToOrder","relativeTo","ReservationDetailsComponent_Template","ReservationDetailsComponent_Template_button_click_13_listener","reservationService","isReservationConfirmed","createReservation","userID","reservation","peopleCount","parseInt","partySize","toString","phoneNumber","phone","snapshot","paramMap","get","Math","floor","random","isNaN","ReservationService","ReservationComponent_Template","ReservationComponent_Template_select_ngModelChange_7_listener","ReservationComponent_Template_input_ngModelChange_52_listener","ReservationComponent_Template_input_ngModelChange_56_listener","ReservationComponent_Template_input_ngModelChange_60_listener","ReservationComponent_Template_button_click_62_listener","service","getRestaurantDetailsById","restaurant","RestaurantOverviewComponent_Template","rating","reviews","cost","cuisines","contact","neighborhood","hours","parkingdetails","isValetPark","ɵɵpureFunction1","ctx_r1","setRestaurantData","RestaurantComponent_Template","RestaurantComponent_li_18_Template","RestaurantComponent_li_19_Template","image","_c1","_c2","map","restaurant_r1","restaurantService","searchTerm","getAllRestaurants","showAllRestaurant","restaurants","slice","filteredRestaurants","showAllCards","filterRestaurants","pipe","toLowerCase","clearSearch","RestaurantsComponent_Template","RestaurantsComponent_Template_input_ngModelChange_5_listener","RestaurantsComponent_Template_input_input_5_listener","RestaurantsComponent_Template_button_click_6_listener","RestaurantsComponent_Template_a_click_13_listener","RestaurantsComponent_div_17_Template","environment","http","isLoggedIn","hostUrl","setAuthenticated","flag","authenticated","getCustomerInfo","profileData","put","post","responseType","ɵɵinject","HttpClient","factory","ɵfac","providedIn","httpClient","url","restaurantStorageKey","localStorage","setItem","getItem","clearRestaurantData","removeItem","id","dilogRef","closeDialog","close","MatDialogRef","SuccessDialogComponent_Template","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}